<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AddSimpleProductWithCustomOptionsToCartDefaultStockTest">
        <annotations>
            <stories value="Simple Product Default Stock."/>
            <title value="Add simple product to cart with custom options."/>
            <description value="Verify, customer able to add simple product with custom options on default stock to cart."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/481999/scenarios/3334786"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <group value="cloud"/>
        </annotations>

        <before>
            <!--Create additional source.-->
            <createData entity="FullSource1" stepKey="additionalSource"/>
            <!--Create category and simple product.-->
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="SimpleProduct" stepKey="product">
                <field key="price">10</field>
                <requiredEntity createDataKey="category"/>
            </createData>
            <!--Create customer.-->
            <createData entity="MsiCustomer1" stepKey="customer"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="DisableAllSourcesActionGroup" stepKey="disableAllSources"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin1"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Add custom option to product.-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openProductEditPage">
            <argument name="productId" value="$$product.id$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('0')}}" userInput="100" stepKey="setProductQuantity"/>
        <click selector="{{AdminProductCustomizableOptionsSection.customizableOptions}}" stepKey="openCustomizableOptions"/>
        <actionGroup ref="AdminCreateCustomDropDownOptionsActionGroup" stepKey="createOption">
            <argument name="customOptionName" value="Test Option"/>
            <argument name="firstOption" value="ProductOptionValueDropdown1"/>
            <argument name="secondOption" value="ProductOptionValueDropdown2"/>
        </actionGroup>
        <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveProduct"/>
        <!--Login To storefront as Customer-->
        <comment userInput="Login to storefront as customer." stepKey="loginToStorefrontComment"/>
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$customer$$"/>
        </actionGroup>
        <!--Add product to cart.-->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="navigateToPDP">
            <argument name="productUrl" value="$$product.custom_attributes[url_key]$$"/>
        </actionGroup>
        <selectOption selector="//select[contains(@class,' required product-custom-option admin__control-select')]" userInput="{{ProductOptionValueDropdown1.title}} +${{ProductOptionValueDropdown1.price}}" stepKey="selectOption"/>
        <fillField selector="{{StorefrontProductPageSection.qtyInput}}" userInput="5" stepKey="fillProductQty"/>
        <click selector="{{StorefrontProductPageSection.addToCartBtn}}" stepKey="addToCart"/>
        <!--Verify, product added to cart correctly-->
        <see selector="{{StorefrontProductPageSection.messagesBlock}}" userInput="You added $$product.name$$ to your shopping cart." stepKey="assertSuccessMessage"/>
    </test>
</tests>
