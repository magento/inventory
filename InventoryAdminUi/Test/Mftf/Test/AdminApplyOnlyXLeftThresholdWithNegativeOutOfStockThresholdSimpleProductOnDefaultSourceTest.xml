<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminApplyOnlyXLeftThresholdWithNegativeOutOfStockThresholdSimpleProductOnDefaultSourceTest">
        <annotations>
            <stories value="Simple Product Default Stock"/>
            <title value="Admin user apply 'Only X left Threshold' with Negative 'Out of Stock' threshold for Simple product on Default source"/>
            <description value="Admin user apply 'Only X left Threshold' for Simple product on Default source in combination with negative 'Out-of-Stock Threshold' and backorders."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735282/scenarios/2076883"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <!--Set "Only X Threshold" in config.-->
            <magentoCLI command="config:set cataloginventory/options/stock_threshold_qty 5" stepKey="setOnlyXThreshold"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterFillThresholdConfig">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterFillThresholdConfig">
                <argument name="tags" value=""/>
            </actionGroup>
            <!--Create customer.-->
            <createData entity="Msi_US_Customer" stepKey="customer"/>
            <!--Create additional source.-->
            <createData entity="_minimalSource" stepKey="additionalSource"/>
            <!--Create category and product.-->
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="SimpleProduct" stepKey="product">
                <field key="price">10.00</field>
                <requiredEntity createDataKey="category"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
        </before>
        <after>
            <!--Disable additional source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdminArea"/>
            <!--Revert 'Only X Left' configuration.-->
            <magentoCLI command="config:set cataloginventory/options/stock_threshold_qty 0" stepKey="revertConfigValue"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterRevertThresholdConfig">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterRevertThresholdConfig">
                <argument name="tags" value=""/>
            </actionGroup>
            <!--Delete test data.-->
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
        </after>
        <!--Enable backorders for simple product.-->
        <amOnPage url="{{AdminProductEditPage.url($$product.id$$)}}" stepKey="openProductEditPageToSetQty"/>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('0')}}" userInput="10" stepKey="setProductQuantity"/>
        <actionGroup ref="AdminEnableBackordersOnProductEditPageActionGroup" stepKey="enableBackorders"/>
        <!--Set 'Out of Stock Threshold' for simple product.-->
        <actionGroup ref="AdminChangeOutOfStockThresholdOnProductEditPageActionGroup" stepKey="setOutOfStockThreshold">
            <argument name="threshold" value="-10"/>
        </actionGroup>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <!--Login on storefront.-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$customer$$"/>
        </actionGroup>
        <!--Add 15 product pieces to cart.-->
        <actionGroup ref="StorefrontAddSimpleProductWithQtyActionGroup" stepKey="addProductToCart">
            <argument name="product" value="$$product$$"/>
            <argument name="quantity" value="15"/>
        </actionGroup>
        <!--Place order-->
        <comment userInput="BIC workaround" stepKey="openMiniCart"/>
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckout"/>
        <comment userInput="BIC workaround" stepKey="waitForCheckoutPage"/>
        <waitForElementClickable selector="{{CheckoutShippingMethodsSection.firstShippingMethod}}" stepKey="waitForFirstShippingMethodClickable" />
        <click selector="{{CheckoutShippingMethodsSection.firstShippingMethod}}" stepKey="selectShippingMethod"/>
        <actionGroup ref="StorefrontCheckoutClickNextButtonActionGroup" stepKey="navigateToSecondCheckoutStep"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyOrderPayment"/>
        <see selector="{{CheckoutPaymentSection.billingAddress}}" userInput="{{US_Address_TX.street[0]}}" stepKey="chooseBillingAddress"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>
        <comment userInput="BIC workaround" stepKey="waitForOrderPlacement"/>
        <see selector="{{CheckoutSuccessMainSection.success}}" userInput="Your order number is:" stepKey="checkOrderPlaceSuccessMessage"/>
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="performCacheFlush">
            <argument name="tags" value=""/>
        </actionGroup>
        <!--Verify 'Only 5 left' appears on PDP.-->
        <amOnPage url="{{StorefrontProductPage.url($$product.custom_attributes[url_key]$$)}}" stepKey="navigateToPDPToVerifyMessage"/>
        <see selector=".availability.only" userInput="Only 5 left" stepKey="checkMessage"/>
    </test>
</tests>
