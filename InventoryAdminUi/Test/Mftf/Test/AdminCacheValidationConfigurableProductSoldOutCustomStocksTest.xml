<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCacheValidationConfigurableProductSoldOutCustomStocksTest">
        <annotations>
            <stories value="Configurable Product Multi Stock."/>
            <title value="Configurable product totally sold on additional stock."/>
            <description value="Verify cache validation for configurable product totally sold on additional stock."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/457025/scenarios/2197170"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <!--Create category and customer.-->
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="Simple_US_Customer" stepKey="customer"/>
            <!--Create main website source and stock.-->
            <createData entity="_minimalSource" stepKey="additionalSourceMainWebsite"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="additionalStockMainWebsite"/>
            <!--Link main website source with stock.-->
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink">
                <requiredEntity createDataKey="additionalStockMainWebsite"/>
                <requiredEntity createDataKey="additionalSourceMainWebsite"/>
            </createData>
            <!--Create configurable product.-->
            <createData entity="ConfigurableMsiProduct" stepKey="configurableProduct"/>
        </before>
        <after>
            <!--Assign Default Stock to Main Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <!--Disable main website source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableMainWebsiteSource">
                <argument name="sourceCode" value="$$additionalSourceMainWebsite.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <!--Delete category, product and stock.-->
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="configurableProduct" stepKey="deleteConfigurable"/>
            <deleteData createDataKey="additionalStockMainWebsite" stepKey="deleteMainWebsiteStock"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Assign category and create configurable variations.-->
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminPanel"/>
        <amOnPage url="{{AdminProductEditPage.url($$configurableProduct.id$$)}}" stepKey="openConfigurableProductEditPage"/>
        <click selector="{{AdminProductFormConfigurationsSection.createConfigurations}}" stepKey="clickOnTheCreateConfigurationsButton"/>
        <waitForElementVisible selector="{{AdminConfigurableProductSelectAttributesSlideOut.grid}}" time="30" stepKey="waitForGridPresents"/>
        <click selector="{{AdminGridRow.checkboxByValue('color')}}" stepKey="selectColorAttribute"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToSecondStep"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.createNewValue}}" stepKey="addNewColorWhite"/>
        <fillField userInput="{{colorProductAttribute1.name}}" selector="{{AdminCreateProductConfigurationsPanel.attributeName}}" stepKey="setNameWhite"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.saveAttribute}}" stepKey="saveWhiteColor"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToThirdStep"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.applySingleQuantityToEachSkus}}" stepKey="clickOnApplySingleQuantityToEachSku"/>
        <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.assignSources}}" stepKey="openSelectSourcesModalWindow"/>
        <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearSourcesFilter"/>
        <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchCustomSourceByNameForAssignment">
            <argument name="keyword" value="$$additionalSourceMainWebsite.source[name]$$"/>
        </actionGroup>
        <click selector="{{AdminGridRow.checkboxByValue($$additionalSourceMainWebsite.source[name]$$)}}" stepKey="selectCustomSource"/>
        <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.done}}" stepKey="daneAssignSources"/>
        <fillField selector="{{AdminConfigurableProductAssignSourcesSlideOut.quantityPerSourceForMultiMode}}" userInput="100" stepKey="fillQuantityForCustomSource"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToFourthStep"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="doneGeneratingConfigurableVariations"/>
        <click selector="{{AdminProductFormSection.save}}" stepKey="saveConfigurableProduct"/>
        <conditionalClick selector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" dependentSelector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" visible="true" stepKey="confirmDefaultAttributeSetForConfigurableProduct"/>
        <!--Set configurable product stock status.-->
        <amOnPage url="{{AdminProductEditPage.url($$configurableProduct.id$$)}}" stepKey="openProductEditPage"/>
        <selectOption selector="{{AdminProductFormSection.productStockStatus}}" userInput="In Stock" stepKey="setProductStockStatus"/>
        <!--Assign product to category.-->
        <actionGroup ref="AdminAssignCategoryToProductAndSaveActionGroup" stepKey="assignCategoryToConfigurableProduct">
            <argument name="categoryName" value="$$category.name$$"/>
        </actionGroup>
        <!-- Login as Customer and add Product to Cart-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="customerLogin">
            <argument name="Customer" value="$$customer$$"/>
        </actionGroup>
        <!--Add configurable option to cart.-->
        <amOnPage url="$$configurableProduct.custom_attributes[url_key]$$.html" stepKey="navigateToProductPage"/>
        <selectOption selector="{{StorefrontConfigurableProductPage.productAttributeDropDown}}" userInput="{{colorProductAttribute1.name}}" stepKey="selectWhiteVariation"/>
        <seeOptionIsSelected selector="{{StorefrontConfigurableProductPage.productAttributeDropDown}}" userInput="{{colorProductAttribute1.name}}" stepKey="checkWhiteVariationIsSelected"/>
        <fillField selector="{{StorefrontProductPageSection.qtyInput}}" userInput="100" stepKey="fillQuantity"/>
        <click selector="{{StorefrontProductPageSection.addToCartBtn}}" stepKey="addToCart"/>
        <waitForElementVisible selector="{{StorefrontProductPageSection.successMsg}}" time="30" stepKey="waitForProductAdded"/>
        <!-- Place Order -->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>
        <waitForElementClickable selector="{{CheckoutPaymentSection.cartItemsArea}}" stepKey="waitForCartItemsClickable"/>
        <waitForElementNotVisible selector="{{CheckoutPaymentSection.cartItemsAreaActive}}" stepKey="waitForCartItemsActive"/>
        <click selector="{{CheckoutPaymentSection.cartItemsArea}}" stepKey="exposeMiniCart"/>
        <waitForPageLoad stepKey="waitForLoadingMaskForCartItem"/>
        <actionGroup ref="StorefrontCheckoutClickNextButtonActionGroup" stepKey="clickNext"/>
        <comment userInput="BIC workaround" stepKey="waitForLoadingMaskForPayment"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="checkMoneyOrderPayment"/>
        <comment userInput="BIC workaround" stepKey="waitForPlaceOrderButton"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="clickPlaceOrder"/>
        <actionGroup ref="StorefrontClickOrderLinkFromCheckoutSuccessPageActionGroup" stepKey="clickOrderLink"/>
        <comment userInput="BIC workaround" stepKey="grabOrderNumber"/>
        <grabFromCurrentUrl regex="~/order_id/(\d+)/~" stepKey="orderId"/>

        <!-- Source Selection -->
        <actionGroup ref="AdminOpenOrderByEntityIdActionGroup" stepKey="openOrder">
            <argument name="entityId" value="{$orderId}"/>
        </actionGroup>
        <click selector="{{AdminOrderDetailsMainActionsSection.ship}}" stepKey="clickShip"/>
        <waitForPageLoad stepKey="waitForShipLoadingMask"/>
        <click selector="{{AdminShipmentMainActionsSection.submitShipment}}" stepKey="submitShipment"/>
        <!--Verify message "The shipment has been created." -->
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The shipment has been created." stepKey="seeShipmentCreateSuccess"/>
        <!-- Verify that your Order got status "Processing" -->
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Processing" stepKey="seeOrderStatus"/>
        <!--Verify Configurable product on storefront.-->
        <amOnPage url="{{StorefrontCategoryPage.url($$category.custom_attributes[url_key]$$)}}" stepKey="navigateToCategoryPage"/>
        <waitForPageLoad stepKey="waitForMainWebsitePDPLoad"/>
        <see selector=".empty" userInput="We can't find products matching the selection." stepKey="verifyProductIsAbsentOnCategoryPage"/>
    </test>
</tests>
