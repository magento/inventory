<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCacheValidationWhenGroupedProductIsSoldOutOnSingleStockModeTest">
        <annotations>
            <stories value="Cache validation when child products of Grouped product on Single stock mode totally sold"/>
            <title value="Cache validation when child products of Grouped product on Single stock mode totally sold"/>
            <description value="Cache validation when child products of Grouped product on Single stock mode totally sold."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/912250/scenarios/2199934"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="single_mode"/>
        </annotations>

        <before>
            <createData entity="Msi_US_Customer" stepKey="customer"/>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="VirtualProduct" stepKey="virtualProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="GroupedProduct" stepKey="groupedProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>
        </before>

        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdminArea"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="virtualProduct" stepKey="deleteVirtualProduct"/>
            <deleteData createDataKey="groupedProduct" stepKey="deleteGroupedProduct"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
        </after>

        <!--Assign Category and Add Simple and Virtual products to the Grouped product -->
        <comment userInput="Assign category to created grouped product." stepKey="assignCategoryToGroupedProductComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForEditGroupedProduct"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findGroupedProductBySku">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$groupedProduct.sku$$"/>
        </actionGroup>
        <click selector="{{AdminProductGridSection.productGridXRowYColumnButton('1', '2')}}" stepKey="openGroupedProductEditPage"/>
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$category.name$$]" requiredAction="true" stepKey="searchAndSelectCategoryForSimpleProduct"/>
        <click selector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" stepKey="clickAddProductsToGroup"/>
        <waitForElementVisible selector="{{AdminAddProductsToGroupPanel.filters}}" stepKey="waitForGroupedProductModal" after="clickAddProductsToGroup"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterGroupedProductOptionsBySimple" after="waitForGroupedProductModal">
            <argument name="product" value="$$simpleProduct$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToGroupPanel.firstCheckbox}}" stepKey="checkSimpleProductFilterResult" after="filterGroupedProductOptionsBySimple"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterGroupedProductOptionsByVirtual">
            <argument name="product" value="$$virtualProduct$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToGroupPanel.firstCheckbox}}" stepKey="checkVirtualProductFilterResult"/>
        <click selector="{{AdminAddProductsToGroupPanel.addSelectedProducts}}" stepKey="clickAddSelectedGroupProducts"/>
        <waitForLoadingMaskToDisappear stepKey="waitForProductsAssignedToGroupedProduct" after="clickAddSelectedGroupProducts"/>
        <actionGroup ref="FillDefaultQuantityForLinkedToGroupProductInGridActionGroup" stepKey="fillDefaultQtyForSimpleProduct">
            <argument name="productName" value="$$simpleProduct.name$$"/>
            <argument name="qty" value="2"/>
        </actionGroup>
        <actionGroup ref="FillDefaultQuantityForLinkedToGroupProductInGridActionGroup" stepKey="fillDefaultQtyForVirtualProduct">
            <argument name="productName" value="$$virtualProduct.name$$"/>
            <argument name="qty" value="2"/>
        </actionGroup>
        <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveAndCloseCreatedGroupedProduct"/>

        <!--Verify Grouped product presents on Category page on frontend-->
        <amOnPage url="{{StorefrontCategoryPage.url($$category.custom_attributes[url_key]$$)}}" stepKey="navigateToCategoryPageOnStorefrontToSeeTheProduct"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoadCategoryPage"/>
        <see userInput="{{GroupedProduct.name}}" stepKey="assertProductPresentOnCategoryPageOnStorefront"/>

        <!--Create Order with Grouped product from Admin-->
        <comment userInput="Create order with grouped product from admin area." stepKey="createOrderWithGroupedProductComment"/>
        <actionGroup ref="AdminNavigateToNewOrderPageExistingCustomerActionGroup" stepKey="createNewOrderForCustomer">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>
        <conditionalClick selector="#store_1" dependentSelector="#order-store-selector" visible="true" stepKey="clickOnDefaultStoreViewIfPresent"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoadStore1"/>
        <comment userInput="Add Simple Grouped product to order." stepKey="addSimpleGroupedProductToOrderComment"/>
        <actionGroup ref="addGroupedProductOptionToOrderMsi" stepKey="addGroupedProductSimpleOptionToOrder">
            <argument name="product" value="GroupedProduct"/>
            <argument name="option" value="$$simpleProduct$$"/>
            <argument name="quantity" value="998"/>
        </actionGroup>
        <scrollToTopOfPage stepKey="scrollToTopOfPage"/>
        <comment userInput="Add Virtual Grouped product to order." stepKey="addVirtualGroupedProductToOrderComment"/>
        <actionGroup ref="addGroupedProductOptionToOrderMsi" stepKey="addGroupedProductVirtualOptionToOrder">
            <argument name="product" value="$$groupedProduct$$"/>
            <argument name="option" value="$$virtualProduct$$"/>
            <argument name="quantity" value="998"/>
        </actionGroup>
        <waitForPageLoad time="30" stepKey="waitForPageLoadVirtualCreate"/>
        <comment userInput="Select shipping method and check grand total and shipping cost." stepKey="selectShippingMethodComment"/>
        <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="selectFlatRateShipping"/>
        <comment userInput="Submit order." stepKey="submitOrderComment"/>
        <click selector="{{AdminOrderFormActionSection.SubmitOrder}}" stepKey="clickSubmitOrder"/>
        <seeElement selector="{{AdminOrderDetailsMessagesSection.successMessage}}" stepKey="seeSuccessMessage"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="You created the order." stepKey="seeSuccessMessageForShipping"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderNumber"/>
        <grabFromCurrentUrl regex="~/order_id/(\d+)/~" stepKey="grabOrderId"/>

        <!--Admin create full Shipment -->
        <comment userInput="Admin - Ship order" stepKey="AdminShipOrder"/>
        <actionGroup ref="AdminOpenOrderByEntityIdActionGroup" stepKey="openOrder">
            <argument name="entityId" value="{$grabOrderId}"/>
        </actionGroup>
        <click selector="{{AdminOrderDetailsMainActionsSection.ship}}" stepKey="clickShip"/>
        <waitForLoadingMaskToDisappear stepKey="waitForShipLoadingMask"/>
        <click selector="{{AdminShipmentMainActionsSection.submitShipment}}" stepKey="submitShipment"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The shipment has been created." stepKey="seeShipmentCreateSuccess"/>

        <!--Admin create full Invoice-->
        <comment userInput="Admin - Process invoice for full order" stepKey="InvoiceFullOrder"/>
        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoice"/>
        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="clickSubmitInvoice"/>
        <waitForPageLoad time="60" stepKey="waitForPageLoadSubmitInvoice"/>
        <scrollToTopOfPage stepKey="scrollToTopMessage"/>
        <waitForPageLoad stepKey="waitForPageLoadSuccessMessage"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The invoice has been created." stepKey="checkSuccessMessage"/>

        <!--Verify Grouped product is not visible on Category page on frontend-->
        <amOnPage url="{{StorefrontCategoryPage.url($$category.custom_attributes[url_key]$$)}}" stepKey="navigateToCategoryPageOnStorefrontToNotSeeTheProduct"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoadCategoryPageWhenProductIsSold"/>
        <dontSee userInput="{{GroupedProduct.name}}" stepKey="assertProductNotPresentOnCategoryPageOnStorefront"/>
    </test>
</tests>
