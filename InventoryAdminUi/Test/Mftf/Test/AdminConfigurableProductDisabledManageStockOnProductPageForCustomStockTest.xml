<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminConfigurableProductDisabledManageStockOnProductPageForCustomStockTest">
        <annotations>
            <stories value="Manage Stock on Product page turned off for Configurable Product on Default stock in admin"/>
            <title value="Manage Stock on Product page turned off for Configurable Product on Default stock in admin"/>
            <description value="Manage Stock on Product page turned off for Configurable Product on Default stock in admin."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/457025/scenarios/1695701"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="_minimalSource" stepKey="customSource"/>
            <createData entity="BasicMsiStock1" stepKey="customStock"/>

            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>

            <comment userInput="Assign source and sales channel to stock." stepKey="assignSourceToStockComment"/>
            <amOnPage url="{{AdminManageStockPage.url}}" stepKey="navigateToStockGridPage"/>
            <waitForPageLoad time="30" stepKey="waitForStockGridLoad"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchCustomStockByName">
                <argument name="keyword" value="$$customStock.stock[name]$$"/>
            </actionGroup>
            <click selector="{{AdminGridRow.editByValue($$customStock.stock[name]$$)}}" stepKey="clickEditCustomStock"/>
            <waitForPageLoad time="30" stepKey="waitForStockEditPageLoad"/>
            <click selector="{{AdminEditStockSourcesSection.assignSources}}" stepKey="clickOnAssignSources"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchCustomSourceByName">
                <argument name="keyword" value="$$customSource.source[name]$$"/>
            </actionGroup>
            <click selector="{{AdminGridRow.checkboxByValue($$customSource.source[name]$$)}}" stepKey="selectCustomSourceForCustomStock"/>
            <click selector="{{AdminManageSourcesGridControls.done}}" stepKey="clickOnDoneCustomSourceAssignment"/>
            <click selector="{{AdminGridMainControls.saveAndContinue}}" stepKey="saveCustomStock"/>
        </before>
        <after>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>

            <comment userInput="Disable source, as it can brake single source mode tests." stepKey="disableCustomSourceComment"/>
            <amOnPage url="{{AdminManageSourcePage.url}}" stepKey="navigateToSourceList"/>
            <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearSourcesFilterForDisable"/>
            <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="filterCustomSourceBySourceCode">
                <argument name="selector" value="AdminManageSourcesGridFilterControls.code"/>
                <argument name="value" value="$$customSource.source[source_code]$$"/>
            </actionGroup>
            <click selector="{{AdminGridRow.editByValue($$customSource.source[source_code]$$)}}" stepKey="clickEditCustomSource"/>
            <waitForPageLoad time="30" stepKey="waitForCustomSourceEditPageLoad"/>
            <click selector="{{AdminEditSourceGeneralSection.isEnabledLabel}}" stepKey="disableCustomSource"/>
            <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveAndCloseCustomSource"/>

            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdminArea"/>
        </after>

        <comment userInput="Create Configurable product with two options 'In Stock' on 'Custom' stock" stepKey="CreateConfigurableProductComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToAdminProductGrid"/>
        <waitForPageLoad time="30" stepKey="waitForProductGridLoad"/>
        <click selector="{{AdminProductGridActionSection.addProductToggle}}" stepKey="clickOnAddProductToggle"/>
        <click selector="{{AdminProductGridActionSection.addTypeProduct('configurable')}}" stepKey="addConfigurableProduct"/>
        <waitForPageLoad time="30" stepKey="waitForConfigurableProductNewPageLoad"/>

        <actionGroup ref="FillMainProductFormInMultiSourceMode" stepKey="fillMainProductFormInMultiSourceMode">
            <argument name="product" value="ConfigurableMsiProduct"/>
        </actionGroup>

        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$category.name$$]"  stepKey="searchAndSelectCategory"/>
        <waitForElementClickable selector="{{AdminProductFormConfigurationsSection.createConfigurations}}" stepKey="waitForConfigurationsButton" />
        <click selector="{{AdminProductFormConfigurationsSection.createConfigurations}}" stepKey="clickOnTheCreateConfigurationsButton"/>
        <waitForElementVisible selector="{{AdminConfigurableProductSelectAttributesSlideOut.grid}}" time="30" stepKey="waitForGridPresents"/>

        <click selector="{{AdminGridRow.checkboxByValue('color')}}" stepKey="selectColorAttribute"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToSecondStep"/>
        <scrollTo selector="{{AdminCreateProductConfigurationsPanel.createNewValue}}" stepKey="scrollToaddNewColorBlue"></scrollTo>
        <click selector="{{AdminCreateProductConfigurationsPanel.createNewValue}}" stepKey="addNewColorBlue"/>
        <fillField userInput="{{colorProductAttribute3.name}}" selector="{{AdminCreateProductConfigurationsPanel.attributeName}}" stepKey="setNameBlue"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.saveAttribute}}" stepKey="saveBlueColor"/>

        <click selector="{{AdminCreateProductConfigurationsPanel.createNewValue}}" stepKey="addNewColorRed"/>
        <fillField userInput="{{colorProductAttribute2.name}}" selector="{{AdminCreateProductConfigurationsPanel.attributeName}}" stepKey="setNameRed"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.saveAttribute}}" stepKey="saveRedColor"/>

        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToThirdStep"/>

        <click selector="{{AdminCreateProductConfigurationsPanel.applySingleQuantityToEachSkus}}" stepKey="clickOnApplySingleQuantityToEachSku"/>
        <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.assignSources}}" stepKey="openSelectSourcesModalWindow"/>

        <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearSourcesFilter"/>
        <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchDefaultSourceByNameForAssignment">
            <argument name="keyword" value="_defaultSource.name"/>
        </actionGroup>
        <click selector="{{AdminGridRow.checkboxByValue(_defaultSource.name)}}" stepKey="selectDefaultSource"/>
        <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.done}}" stepKey="daneAssignSources"/>

        <fillField selector="{{AdminConfigurableProductAssignSourcesSlideOut.quantityPerSource('0')}}" userInput="100" stepKey="fillQuantityForDefaultSource"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToFourthStep"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="doneGeneratingConfigurableVariations"/>

        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveConfigurableProduct"/>
        <conditionalClick selector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" dependentSelector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" visible="true" stepKey="confirmDefaultAttributeSetForConfigurableProduct"/>
        <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="checkProductSavedMessage"/>

        <seeNumberOfElements selector="{{AdminProductFormConfigurationsSection.currentVariationsRows}}" userInput="2" stepKey="checkConfigurableMatrix"/>
        <see selector="{{AdminProductFormConfigurationsSection.currentVariationsNameCells}}" userInput="{{colorProductAttribute3.name}}" stepKey="checkBlueAttributeVariationName"/>
        <see selector="{{AdminProductFormConfigurationsSection.currentVariationsNameCells}}" userInput="{{colorProductAttribute2.name}}" stepKey="checkRedAttributeVariationName"/>
        <see selector="{{AdminProductFormConfigurationsSection.currentVariationsSkuCells}}" userInput="{{colorProductAttribute3.name}}" stepKey="checkBlueAttributeVariationSku"/>
        <see selector="{{AdminProductFormConfigurationsSection.currentVariationsSkuCells}}" userInput="{{colorProductAttribute2.name}}" stepKey="checkRedAttributeVariationSku"/>
        <see selector="{{AdminConfigurableProductFormSection.currentVariationsQuantityCells}}" userInput="100" stepKey="checkQtyIsCorrectForDefaultSource"/>

        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateBackToAdminProductGrid"/>
        <waitForPageLoad time="30" stepKey="waitForProductGridPageIsLoaded"/>
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGrid"/>
        <actionGroup ref="FilterProductGridByNameActionGroup" stepKey="filterBlueConfigurableVariation">
            <argument name="product" value="colorProductAttribute3"/>
        </actionGroup>
        <click selector="{{AdminProductGridSection.productGridXRowYColumnButton('1', '2')}}" stepKey="editBlueConfigurableVariation"/>
        <selectOption selector="{{AdminProductSourcesGrid.rowStatus('0')}}" userInput="Out of Stock" stepKey="setBlueConfigurableVariationToOutOfStock"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveBlueConfigurableVariation"/>
        <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="checkBlueConfigurableVariationSaveMessage"/>

        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateBackToAdminProductGridToEditRedConfigurableVariation"/>
        <waitForPageLoad time="30" stepKey="waitForProductGridLoadToFindRedConfigurableVariation"/>
        <actionGroup ref="FilterProductGridByNameActionGroup" stepKey="filterProductGridToFindConfigurableRedVariation">
            <argument name="product" value="colorProductAttribute2"/>
        </actionGroup>
        <click selector="{{AdminProductGridSection.productGridXRowYColumnButton('1', '2')}}" stepKey="editConfigurableRedVariation"/>
        <selectOption selector="{{AdminProductSourcesGrid.rowStatus('0')}}" userInput="Out of Stock" stepKey="setConfigurableRedVariationToOutOfStock"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveConfigurableRedVariation"/>
        <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="checkRedConfigurableVariationSaveMessage"/>

        <comment userInput="Check, configurable product is absent on category page and has 'Out of Stock' status" stepKey="checkConfigurableProductIsAbsentOnCategoryPageAndHasOutOfStockStatusOnViewPageComment"/>
        <amOnPage url="{{StorefrontCategoryPage.url($$category.custom_attributes[url_key]$$)}}" stepKey="navigateBackToConfigurableCategoryPage"/>
        <waitForPageLoad stepKey="waitForPageLoad7"/>
        <dontSee userInput="{{ConfigurableMsiProduct.name}}" stepKey="checkConfigurableProductIsAbsentOnCategoryPage"/>
        <comment userInput="Set 'Manage Stock' to no for configurable children" stepKey="setManageStockToNoForConfigurableChildrenComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateBackToAdminProductGridToSetManageStockToNoForChildren"/>
        <waitForPageLoad time="30" stepKey="waitForProductGridPageIsLoadedToSetManageStockToNoForChildren"/>
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGridToSetManageStockToNoForBlue"/>
        <actionGroup ref="FilterProductGridByNameActionGroup" stepKey="filterBlueConfigurableVariationToSetManageStockToNoForBlue">
            <argument name="product" value="colorProductAttribute3"/>
        </actionGroup>
        <click selector="{{AdminProductGridSection.productGridXRowYColumnButton('1', '2')}}" stepKey="editBlueConfigurableVariationToSetManageStockToNoForBlue"/>
        <click selector="{{AdminProductSourcesSection.advancedInventory}}" stepKey="clickOnAdvancedInventoryToSetManageStockToNoForBlue"/>
        <click selector="{{AdminAdvancedInventorySection.manageStockUseDefault}}" stepKey="clickOnManageStockToSetItToNoForBlue"/>
        <selectOption selector="{{AdminAdvancedInventorySection.manageStock}}" userInput="No" stepKey="fillManageStockToNoForBlue"/>
        <click selector="{{AdminAdvancedInventoryControlsSection.done}}" stepKey="clickOnDoneToSetManageStockToNoForBlue"/>
        <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveAndCloseToSetManageStockToNoForBlue"/>

        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGridToSetManageStockToNoForRed"/>
        <actionGroup ref="FilterProductGridByNameActionGroup" stepKey="filterRedConfigurableVariation">
            <argument name="product" value="colorProductAttribute2"/>
        </actionGroup>
        <click selector="{{AdminProductGridSection.productGridXRowYColumnButton('1', '2')}}" stepKey="editConfigurableRedVariationToSetManageStockToNoForRed"/>
        <click selector="{{AdminProductSourcesSection.advancedInventory}}" stepKey="clickOnAdvancedInventoryToSetManageStockToNoForRed"/>
        <click selector="{{AdminAdvancedInventorySection.manageStockUseDefault}}" stepKey="clickOnManageStockToSetItToNoForRed"/>
        <selectOption selector="{{AdminAdvancedInventorySection.manageStock}}" userInput="No" stepKey="fillManageStockToNoForRed"/>
        <click selector="{{AdminAdvancedInventoryControlsSection.done}}"
               stepKey="clickOnDoneToSetManageStockToNoForRed"/>
        <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveAndCloseToSetManageStockToNoForRed"/>

        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterDisableManageStock1">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterDisableManageStock1">
            <argument name="tags" value=""/>
        </actionGroup>

        <comment userInput="Check, configurable product back to category page and has 'In Stock' status on product view page." stepKey="checkConfigurableProductBackOnStorefront"/>
        <actionGroup ref="AssertProductInStorefrontCategoryPage" stepKey="checkConfigurableIsBackToCategoryPage">
            <argument name="category" value="$$category$$"/>
            <argument name="product" value="ConfigurableMsiProduct"/>
        </actionGroup>
        <actionGroup ref="AssertProductInStorefrontProductPageActionGroup" stepKey="checkConfigurableBackToStockOnProductViewPage">
            <argument name="product" value="ConfigurableMsiProduct"/>
        </actionGroup>

        <selectOption selector="{{StorefrontConfigurableProductPage.productAttributeDropDown}}" userInput="{{colorProductAttribute3.name}}" stepKey="checkCanSelectBlueVariation"/>
        <seeOptionIsSelected selector="{{StorefrontConfigurableProductPage.productAttributeDropDown}}" userInput="{{colorProductAttribute3.name}}" stepKey="checkBlueVariationCanBeSelected"/>
        <selectOption selector="{{StorefrontConfigurableProductPage.productAttributeDropDown}}" userInput="{{colorProductAttribute2.name}}" stepKey="checkCanSelectRedVariation"/>
        <seeOptionIsSelected selector="{{StorefrontConfigurableProductPage.productAttributeDropDown}}" userInput="{{colorProductAttribute2.name}}" stepKey="checkRedVariationCanBeSelected"/>
    </test>
</tests>
