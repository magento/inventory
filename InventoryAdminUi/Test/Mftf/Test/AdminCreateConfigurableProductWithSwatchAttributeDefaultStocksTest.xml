<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateConfigurableProductWithSwatchAttributeDefaultStocksTest">
        <annotations>
            <stories value="Configurable Product Multi Stock."/>
            <title value="Create configurable product with visual swatch on default stock."/>
            <description value="Verify configurable product with visual swatch on default stock and main websites."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/457025/scenarios/1432135"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <group value="cloud"/>
        </annotations>

        <before>
            <!--Create category.-->
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <!--Crate additional source.-->
            <createData entity="_minimalSource" stepKey="additionalSource"/>
            <!--Assign Default Stock to Main Website.-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
        </before>
        <after>
            <!--Disable additional source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableAdditionalSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <!--Delete category.-->
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Start creating configurable product.-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductGridToCreateConfigurableProduct"/>
        <waitForPageLoad time="30" stepKey="waitForProductGridLoad"/>
        <click selector="{{AdminProductGridActionSection.addProductToggle}}" stepKey="clickOnTheAddProductToggle"/>
        <click selector="{{AdminProductGridActionSection.addTypeProduct('configurable')}}" stepKey="clickOnAddConfigurableProduct"/>
        <waitForPageLoad time="30" stepKey="waitForConfigurableProductCreatePageLoaded"/>
        <!--Fill main product fields.-->
        <fillField userInput="{{ConfigurableMsiProduct.name}}" selector="{{AdminProductFormSection.productName}}" stepKey="fillConfigurableProductName"/>
        <fillField userInput="{{ConfigurableMsiProduct.price}}" selector="{{AdminProductFormSection.productPrice}}" stepKey="fillConfigurableProductPrice"/>
        <fillField userInput="{{ConfigurableMsiProduct.sku}}" selector="{{AdminProductFormSection.productSku}}" stepKey="fillConfigurableProductSku"/>
        <fillField userInput="{{ConfigurableMsiProduct.quantity}}" selector="{{AdminConfigurableProductFormSection.productQuantity}}" stepKey="fillConfigurableProductQuantity"/>
        <fillField userInput="{{ConfigurableMsiProduct.weight}}" selector="{{AdminConfigurableProductFormSection.productWeight}}" stepKey="fillConfigurableProductWeight"/>
        <!--Start creating configurations.-->
        <click selector="{{AdminProductFormConfigurationsSection.createConfigurations}}" stepKey="clickOnTheCreateConfigurationsButton"/>
        <waitForElementVisible selector="{{AdminConfigurableProductSelectAttributesSlideOut.grid}}" time="30" stepKey="waitForAttributesGridLoad"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.createNewAttribute}}" stepKey="createNewAttribute"/>
        <waitForPageLoad time="30" stepKey="waitForCreateAttributePageLoad"/>
        <switchToIFrame selector="{{AdminNewAttributePanel.newAttributeIFrame}}" stepKey="switchToNewAttributeIFrame"/>
        <!--Fill attribute data.-->
        <fillField selector="{{AdminNewAttributePanel.defaultLabel}}" userInput="{{visualSwatchAttribute.name}}" stepKey="fillSwatchAttributeLabel"/>
        <selectOption selector="#frontend_input" userInput="{{visualSwatchAttribute.catalogInputType}}" stepKey="fillInputTypeForAttribute"/>
        <!--Add first option.-->
        <click selector="#add_new_swatch_visual_option_button" stepKey="addFirstSwatchOption"/>
        <fillField selector="input[name='optionvisual[value][option_0][0]']" userInput="{{visualSwatchColor1.name}}" stepKey="fillFirstAdminOptionName"/>
        <!--Add second option.-->
        <click selector="#add_new_swatch_visual_option_button" stepKey="addSecondSwatchOption"/>
        <fillField selector="input[name='optionvisual[value][option_1][0]']" userInput="{{visualSwatchColor2.name}}" stepKey="fillSecondAdminOptionAttributeName"/>
        <click selector="{{AdminNewAttributePanel.saveAttribute}}" stepKey="saveAttribute"/>
        <waitForPageLoad stepKey="waitForAttributeSave"/>
        <switchToIFrame stepKey="switchOutOfIFrame"/>
        <!--Select created attribute for configurable variations.-->
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findAttributeInGrid">
            <argument name="selector" value="AdminAssignProductAttributeSlideOutSection.attributeLabel"/>
            <argument name="value" value="{{visualSwatchAttribute.name}}"/>
        </actionGroup>
        <click selector="{{AdminGridRow.checkboxByValue(visualSwatchAttribute.name)}}" stepKey="clickOnTheColorAttribute"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="clickOnNextButton"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.selectAll}}" stepKey="clickOnSelectAll"/>
        <!--Assign default source.-->
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToThirdStep"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.applySingleQuantityToEachSkus}}" stepKey="applySingleQuantityToVariations"/>
        <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.assignSources}}" stepKey="clickOnAssignSources"/>
        <conditionalClick selector="(//div[@class='admin__data-grid-header']//*[@data-action='grid-filter-reset'])[1]" dependentSelector="(//div[@class='admin__data-grid-header']//*[@data-action='grid-filter-reset'])[1]" visible="true" stepKey="clickClearFilters1"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="filterSearchResults1">
            <argument name="selector" value="AdminManageSourcesGridFilterControls.code"/>
            <argument name="value" value="{{_defaultSource.source_code}}"/>
        </actionGroup>
        <click selector="{{AdminGridRow.checkboxByValue(_defaultSource.name)}}" stepKey="selectDefaultSource"/>
        <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.done}}" stepKey="done"/>
        <fillField selector="{{AdminConfigurableProductAssignSourcesSlideOut.quantityPerSourceForMultiMode}}" userInput="100" stepKey="fillQuantity"/>
        <!--Finish generate variations.-->
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToFourthStep"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="doneGeneratingConfigurableVariations"/>
        <click selector="{{AdminProductFormSection.save}}" stepKey="saveProduct"/>
        <conditionalClick selector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" dependentSelector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" visible="true" stepKey="confirmDefaultAttributeSetForConfigurableProduct"/>
        <!--Assign product to category.-->
        <actionGroup ref="AdminAssignCategoryToProductAndSaveActionGroup" stepKey="assignCategoryToConfigurableProduct">
            <argument name="categoryName" value="$$category.name$$"/>
        </actionGroup>
        <!--Verify configurable product on storefront.-->
        <actionGroup ref="AssertProductInStorefrontCategoryPage" stepKey="verifyConfigurableProductOnCategoryPage">
            <argument name="category" value="$$category$$"/>
            <argument name="product" value="ConfigurableMsiProduct"/>
        </actionGroup>
        <actionGroup ref="AssertProductInStorefrontProductPageActionGroup" stepKey="verifyConfigurableProductOnPDP">
            <argument name="product" value="ConfigurableMsiProduct"/>
        </actionGroup>
    </test>
</tests>
