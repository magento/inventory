<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCreditMemoPartialReturnToStockAfterFullInvoiceFullShipmentSimpleProductsCustomStockTest">
        <annotations>
            <stories value="Simple Product Custom Stock."/>
            <title value="Admin create credit memo partial return to stock after full invoice and full shipment."/>
            <description value="Verify salable quantity is correct when credit memo created for two product with return to stock just for one of them after full invoice and full shipment."/>
            <testCaseId value="https://studio.cucumber.io/projects/69435/test-plan/folders/735125/scenarios/4456726"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <!--Create test data.-->
            <createData entity="FullSource1" stepKey="source"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="stock"/>
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink">
                <requiredEntity createDataKey="stock"/>
                <requiredEntity createDataKey="source"/>
            </createData>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="SimpleProduct" stepKey="product1">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="SimpleProduct" stepKey="product2">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="MsiCustomer1" stepKey="customer"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!--Assign products to custom source.-->
            <amOnPage url="{{AdminProductEditPage.url($product1.id$)}}" stepKey="openProduct1EditPage"/>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct1">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignCulverSourceAndSetQtyForProduct1">
                <argument name="sourceCode" value="$source.source[source_code]$"/>
            </actionGroup>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct1"/>
            <amOnPage url="{{AdminProductEditPage.url($product2.id$)}}" stepKey="openProduct2EditPage"/>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct2">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignCulverSourceAndSetQtyForProduct2">
                <argument name="sourceCode" value="$source.source[source_code]$"/>
            </actionGroup>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct2"/>
        </before>
        <after>
            <!--Clean up test data.-->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="product1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="product2" stepKey="deleteProduct2"/>
            <!--Disable additional source.-->
            <actionGroup ref="DisableAllSourcesActionGroup" stepKey="disableSources"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <deleteData createDataKey="stock" stepKey="deleteStock"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Login on storefront-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$customer$"/>
        </actionGroup>
        <!--Add products to cart.-->
        <actionGroup ref="StorefrontOpenProductEntityPageActionGroup" stepKey="navigateToProduct1PDP">
            <argument name="product" value="$product1$"/>
        </actionGroup>
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addProduct1ToCart">
            <argument name="productName" value="$product1.name$"/>
        </actionGroup>
        <actionGroup ref="StorefrontOpenProductEntityPageActionGroup" stepKey="navigateToProduct2PDP">
            <argument name="product" value="$product2$"/>
        </actionGroup>
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addProduct2ToCart">
            <argument name="productName" value="$product2.name$"/>
        </actionGroup>
        <!--Place order.-->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="navigateToCheckout"/>
        <actionGroup ref="StorefrontCheckoutClickNextButtonActionGroup" stepKey="clickNext"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="orderNumber"/>
        <!--Process full invoice.-->
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrder">
            <argument name="orderId" value="{$orderNumber}"/>
        </actionGroup>
        <actionGroup ref="StartCreateInvoiceFromOrderPageActionGroup" stepKey="createInvoice"/>
        <actionGroup ref="SubmitInvoiceActionGroup" stepKey="submitInvoice"/>
        <!--Process full shipment.-->
        <actionGroup ref="GoToShipmentIntoOrderActionGroup" stepKey="clickShipAction"/>
        <actionGroup ref="SubmitShipmentIntoOrderActionGroup" stepKey="submitShipment"/>
        <!--Create credit memo with "return to stock" for product1.-->
        <actionGroup ref="AdminStartsCreatingCreditMemoOnOrderPageActionGroup" stepKey="startToCreateCreditMemo"/>
        <actionGroup ref="AdminFillQuantityForPartialCreditMemoReturnToStockActionGroup" stepKey="fillCreditMemoQuantity"/>
        <actionGroup ref="SubmitCreditMemoActionGroup" stepKey="submitCreditMemo"/>
        <!--Check quantities after credit memo.-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckProductQtyAfterCreditMemo"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProduct1BySkuToCheckQtyAfterCreditMemo">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$product1.sku$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="verifyProduct1Quantity">
            <argument name="sourceName" value="$source.source[name]$"/>
            <argument name="stockName" value="$stock.stock[name]$"/>
            <argument name="sourceQty" value="{{defaultProductQty.value}}"/>
            <argument name="stockQty" value="{{defaultProductQty.value}}"/>
        </actionGroup>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProduct2BySkuToCheckQtyAfterCreditMemo">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$product2.sku$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="verifyProduct2Quantity">
            <argument name="sourceName" value="$source.source[name]$"/>
            <argument name="stockName" value="$stock.stock[name]$"/>
            <argument name="sourceQty" value="{{defaultProductQtyBoughtWithOnePiece.value}}"/>
            <argument name="stockQty" value="{{defaultProductQtyBoughtWithOnePiece.value}}"/>
        </actionGroup>
    </test>
</tests>
