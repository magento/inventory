<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCreditMemoTotalRefundFullInvoicePartialShipmentBundleProductDefaultStockTest">
        <annotations>
            <stories value="Bundle Product Default Stock."/>
            <title value="Create partial credit Memo with bundle product on default stock."/>
            <description value="Verify, admin able to create credit memo with total refund after full invoice and full shipment with bundle product on default stock."/>
            <testCaseId value="https://studio.cucumber.io/projects/69435/test-plan/folders/735178/scenarios/2556040"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <!--Create test data.-->
            <createData entity="FullSource1" stepKey="source"/>
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="ApiBundleProductShipmentTypeSeparately" stepKey="bundleProduct"/>
            <createData entity="SimpleProduct" stepKey="product">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="MsiCustomer1" stepKey="customer"/>
            <createData entity="DropDownBundleOption" stepKey="bundleOption">
                <requiredEntity createDataKey="bundleProduct"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="bundleLink">
                <requiredEntity createDataKey="bundleProduct"/>
                <requiredEntity createDataKey="bundleOption"/>
                <requiredEntity createDataKey="product"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <!--Assign source and set simple product quantity-->
            <amOnPage url="{{AdminProductEditPage.url($product.id$)}}" stepKey="openSimpleProductEditPage"/>
            <actionGroup ref="AdminFillSourceQtyOnProductEditPageActionGroup" stepKey="fillProductQuantity"/>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>
            <!--Assign bundle product to category.-->
            <amOnPage url="{{AdminProductEditPage.url($$bundleProduct.id$$)}}" stepKey="openBundleProductEditPage"/>
            <actionGroup ref="AdminAssignCategoryToProductAndSaveActionGroup" stepKey="assignCategoryToProduct">
                <argument name="categoryName" value="$category.name$"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <deleteData createDataKey="bundleProduct" stepKey="deleteBundleProduct"/>
            <actionGroup ref="DisableAllSourcesActionGroup" stepKey="disableAllSources"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Login to storefront as customer-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$customer$$"/>
        </actionGroup>
        <!--Add bundle product to cart.-->
        <amOnPage url="{{StorefrontProductPage.url($bundleProduct.custom_attributes[url_key]$)}}" stepKey="navigateToBundlePDP"/>
        <actionGroup ref="StorefrontAddBundleProductFromProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="productName" value="$bundleProduct.name$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAddBundleProductFromProductToCartActionGroup" stepKey="addProductToCartOnceAgain">
            <argument name="productName" value="$bundleProduct.name$"/>
        </actionGroup>
        <!--Place order.-->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="navigateToCheckoutPage"/>
        <actionGroup ref="StorefrontCheckoutClickNextButtonActionGroup" stepKey="clickNext"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="clickOnPlaceOrder"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="orderNumber"/>
        <!--Admin area process full invoice-->
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrderToCreateInvoice">
            <argument name="orderId" value="{$orderNumber}"/>
        </actionGroup>
        <actionGroup ref="StartCreateInvoiceFromOrderPageActionGroup" stepKey="startCreateInvoice"/>
        <actionGroup ref="SubmitInvoiceActionGroup" stepKey="submitInvoice"/>
        <!--Process partial shipment.-->
        <actionGroup ref="GoToShipmentIntoOrderActionGroup" stepKey="clickShipAction"/>
        <actionGroup ref="AdminFillPartialShipmentActionGroup" stepKey="fillShipmentQty">
            <argument name="quantity" value="{{minimalProductQty.value}}"/>
        </actionGroup>
        <actionGroup ref="SubmitShipmentIntoOrderActionGroup" stepKey="submitShipment"/>
        <!--Admin area create full credit memo-->
        <actionGroup ref="AdminStartsCreatingCreditMemoOnOrderPageActionGroup" stepKey="startToCreateCreditMemo"/>
        <actionGroup ref="AdminFillQuantityForPartialCreditMemoReturnToStockActionGroup" stepKey="fillCreditMemoQuantity">
            <argument name="quantity" value="{{twoPiecesAddToCart.value}}"/>
        </actionGroup>
        <actionGroup ref="SubmitCreditMemoActionGroup" stepKey="submitCreditMemo"/>
        <!--Admin area check quantities after credit memo-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductGridToVerifyQuantity"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProductInGridToVerifyQuantity">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$product.sku$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="verifyProductQuantityAfterCreditMemo">
            <argument name="sourceName" value="{{_defaultSource.name}}"/>
            <argument name="stockName" value="{{_defaultStock.name}}"/>
            <argument name="sourceQty" value="{{defaultProductQty.value}}"/>
            <argument name="stockQty" value="{{defaultProductQty.value}}"/>
        </actionGroup>
    </test>
</tests>
