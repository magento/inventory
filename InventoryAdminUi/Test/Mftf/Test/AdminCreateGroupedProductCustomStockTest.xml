<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateGroupedProductCustomStockTest">
        <annotations>
            <stories value="Grouped Product Custom Stock."/>
            <title value="Create Grouped Product On Custom Stock."/>
            <description value="Verify, admin able to create grouped product on additional stock."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/457017/scenarios/1620000"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <!--Create additional source.-->
            <createData entity="FullSource1" stepKey="additionalSource"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="additionalStock"/>
            <createData entity="SourceStockLinked1" stepKey="stockSourceLink">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="additionalSource"/>
            </createData>
            <!--Create grouped and virtual product.-->
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="GroupedProduct" stepKey="groupedProduct"/>
            <createData entity="VirtualProduct" stepKey="product"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <!--Disable created additional source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedCustomSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin1"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="groupedProduct" stepKey="deleteGroupedProduct"/>
            <deleteData createDataKey="additionalStock" stepKey="deleteStock"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>
        <!--Assign virtual product to additional source.-->
        <amOnPage url="{{AdminProductEditPage.url($$product.id$$)}}" stepKey="openVirtualProductEditPage"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignTestSourceToCreatedProduct">
            <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="setCustomSourceQuantity"/>
        <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveVirtualProduct"/>
        <!--Assign virtual to grouped product.-->
        <amOnPage url="{{AdminProductEditPage.url($$groupedProduct.id$$)}}" stepKey="openGroupedProductEditPage"/>
        <click selector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" stepKey="clickAddProductsToGroup"/>
        <waitForElementVisible selector="{{AdminAddProductsToGroupPanel.filters}}" stepKey="waitForGroupedProductModal"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterGroupedProductOptionsBySimple">
            <argument name="product" value="$$product$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToGroupPanel.firstCheckbox}}" stepKey="checkProductFilterResult"/>
        <click selector="{{AdminAddProductsToGroupPanel.addSelectedProducts}}" stepKey="clickAddSelectedGroupProducts"/>
        <waitForLoadingMaskToDisappear stepKey="waitForProductsAssignedToGroupedProduct" after="clickAddSelectedGroupProducts"/>
        <actionGroup ref="FillDefaultQuantityForLinkedToGroupProductInGridActionGroup" stepKey="fillDefaultQtyForVirtualProduct">
            <argument name="productName" value="$$product.name$$"/>
            <argument name="qty" value="2"/>
        </actionGroup>
        <!--Assign product to category and save.-->
        <scrollToTopOfPage stepKey="scrollOnTopOfProductPagePage"/>
        <actionGroup ref="AdminAssignCategoryToProductAndSaveActionGroup" stepKey="assignCategoryToProduct">
            <argument name="categoryName" value="$$category.name$$"/>
        </actionGroup>
        <!--Verify product on storefront.-->
        <amOnPage url="{{StorefrontCategoryPage.url($$category.custom_attributes[url_key]$$)}}" stepKey="navigateToCategoryPage"/>
        <waitForPageLoad stepKey="waitForCategoryPageLoad"/>
        <see userInput="$$groupedProduct.name$$" stepKey="assertProductPresent"/>
        <see userInput="$$product.price$$" stepKey="assertProductPricePresent"/>
    </test>
</tests>
