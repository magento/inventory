<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreatePartialInvoiceForOrderWithDownloadableProductOnDefaultStockTest">
        <annotations>
            <stories value="Downloadable product Default Stock"/>
            <title value="Creat Partial Invoice with Downloadable Product on Default Stock."/>
            <description value="Admin user create partial invoice for whole order with downloadable product on default stock"/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735234/scenarios/1440274"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <magentoCLI stepKey="addDownloadableDomain" command="downloadable:domains:add example.com static.magento.com"/>
            <!--Create test data.-->
            <createData entity="FullSource1" stepKey="additionalSource"/>
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="Msi_US_Customer" stepKey="customer"/>
            <createData entity="DownloadableProductWithTwoLink100" stepKey="product">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="downloadableLink1" stepKey="addDownloadableLink1">
                <requiredEntity createDataKey="product"/>
            </createData>
            <createData entity="downloadableLink2" stepKey="addDownloadableLink2">
                <requiredEntity createDataKey="product"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <magentoCLI stepKey="removeDownloadableDomain" command="downloadable:domains:remove static.magento.com example.com"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Set product quantity.-->
        <amOnPage url="{{AdminProductEditPage.url($$product.id$$)}}" stepKey="openProductEditPage"/>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('0')}}" userInput="100" stepKey="setDefaultStockQuantity"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <!--Create order with downloadable product-->
        <actionGroup ref="AdminNavigateToNewOrderPageExistingCustomerActionGroup" stepKey="createNewOrderForCustomer">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>
        <conditionalClick selector="#store_1" dependentSelector="#order-store-selector" visible="true" stepKey="clickOnDefaultStoreViewIfPresent"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad"/>
        <actionGroup ref="AddSimpleProductToOrderActionGroup" stepKey="addProductToOrder">
            <argument name="product" value="$$product$$"/>
            <argument name="productQty" value="10"/>
        </actionGroup>
        <waitForPageLoad time="30" stepKey="waitForPageLoadOrder"/>
        <click selector="{{AdminOrderFormActionSection.SubmitOrder}}" stepKey="clickSubmitOrder"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="You created the order." stepKey="seeSuccessMessageOrderPlaced"/>
        <!--Process partial invoice.-->
        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoice"/>
        <scrollTo selector="{{AdminInvoiceItemsSection.updateQty}}" stepKey="scrollToQty"/>
        <fillField selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('1')}}" userInput="5" stepKey="invoiceQuantityPartial"/>
        <click selector="{{AdminInvoiceItemsSection.updateQty}}" stepKey="clickUpdateQty"/>
        <waitForPageLoad stepKey="waitPageToBeLoaded"/>
        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="clickSubmitInvoice"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The invoice has been created." stepKey="checkSuccessMessage"/>
        <!--Verify product quantity.-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckProductQtyAfterInvoice"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProductBySkuToCheckQtyAfterInvoice">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$product.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1', _defaultSource.name)}}" userInput="95" stepKey="checkProductSourceQtyAfterInvoice"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1', _defaultStock.name)}}" userInput="90" stepKey="checkSalableQtyAfterInvoice"/>
    </test>
</tests>
