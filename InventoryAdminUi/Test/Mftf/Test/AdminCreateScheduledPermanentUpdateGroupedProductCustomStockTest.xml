<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateScheduledPermanentUpdateGroupedProductCustomStockTest" extends="AdminCreateScheduledPermanentUpdateProductTest">
        <annotations>
            <stories value="Grouped Product Custom Stock."/>
            <title value="Create Schedule Update With Grouped Product On Custom Stock."/>
            <description value="Verify, grouped product on custom stock should be visible on storefront after schedule update."/>
            <severity value="CRITICAL"/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/566629/scenarios/1936181"/>
            <group value="msi_ee"/>
            <group value="multi_mode"/>
        </annotations>
        <before>
            <!--Create stock and source.-->
            <createData entity="FullSource1" stepKey="source"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="stock"/>
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink">
                <requiredEntity createDataKey="stock"/>
                <requiredEntity createDataKey="source"/>
            </createData>
            <!--Create grouped and virtual products.-->
            <createData entity="GroupedProduct" stepKey="groupedProduct"/>
            <createData entity="VirtualProduct" stepKey="product"/>
            <!--Assign source to virtual product.-->
            <amOnPage url="{{AdminProductEditPage.url($$product.id$$)}}" stepKey="openProductEditPage"/>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignSourceToProduct">
                <argument name="sourceCode" value="$source.source[source_code]$"/>
            </actionGroup>
            <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveAndCloseProduct"/>
            <!--Assign virtual to grouped product.-->
            <amOnPage url="{{AdminProductEditPage.url($$groupedProduct.id$$)}}" stepKey="openGroupedProductEditPage"/>
            <click selector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" stepKey="clickAddProductsToGroup"/>
            <waitForElementVisible selector="{{AdminAddProductsToGroupPanel.filters}}" stepKey="waitForGroupedProductModal"/>
            <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterGroupedProductOptionsBySimple">
                <argument name="product" value="$$product$$"/>
            </actionGroup>
            <checkOption selector="{{AdminAddProductsToGroupPanel.firstCheckbox}}" stepKey="checkProductFilterResult"/>
            <click selector="{{AdminAddProductsToGroupPanel.addSelectedProducts}}" stepKey="clickAddSelectedGroupProducts"/>
            <waitForPageLoad stepKey="waitForProductsAssignedToGroupedProduct" after="clickAddSelectedGroupProducts"/>
            <actionGroup ref="FillDefaultQuantityForLinkedToGroupProductInGridActionGroup" stepKey="fillDefaultQtyForVirtualProduct">
                <argument name="productName" value="$$product.name$$"/>
                <argument name="qty" value="{{minimalProductQty.value}}"/>
            </actionGroup>
            <scrollToTopOfPage stepKey="scrollToTheTopOfGroupedProductEditPage"/>
            <actionGroup ref="AdminAssignCategoryToProductAndSaveActionGroup" stepKey="assignCategoryToProduct">
                <argument name="categoryName" value="$createCategory.name$"/>
            </actionGroup>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="product" stepKey="deleteVirtualProduct" before="deleteGroupedProduct"/>
            <deleteData createDataKey="groupedProduct" stepKey="deleteGroupedProduct" before="disableSource"/>
            <!--Disable additional source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableSource" before="assignMainWebsiteToDefaultStock">
                <argument name="sourceCode" value="$source.source[source_code]$"/>
            </actionGroup>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock" before="deleteStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <deleteData createDataKey="stock" stepKey="deleteStock" before="amOnLogoutPage"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Verify grouped product on storefront.-->
        <amOnPage url="{{StorefrontCategoryPage.url($createCategory.custom_attributes[url_key]$)}}" stepKey="navigateToCategoryPage"/>
        <waitForPageLoad stepKey="waitForCategory"/>
        <see userInput="$groupedProduct.name$" stepKey="assertProductPresent"/>
        <see userInput="$product.price$" stepKey="assertProductPricePresent"/>
    </test>
</tests>
