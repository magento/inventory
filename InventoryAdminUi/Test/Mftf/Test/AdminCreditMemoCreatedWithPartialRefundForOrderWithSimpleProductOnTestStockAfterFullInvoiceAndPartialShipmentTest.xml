<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test
        name="AdminCreditMemoCreatedWithPartialRefundForOrderWithSimpleProductOnTestStockAfterFullInvoiceAndPartialShipmentTest">
        <annotations>
            <stories value="MSI Credit Memo"/>
            <title
                value="Credit memo created with partial Refund for order with Simple product on Test stock after full invoice and partial shipment in Admin"/>
            <description
                value="Credit memo created with partial Refund for order with Simple product on Test stock after full invoice and partial shipment in Admin."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735125/scenarios/2483049"/>
            <severity value="BLOCKER"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <!--Create additional source and stock.-->
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="additionalStock"/>
            <createData entity="FullSource1" stepKey="createSource"/>
            <createData entity="SourceStockLinked1" stepKey="linkSourceStock">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="createSource"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>

            <createData entity="SimpleSubCategory" stepKey="simpleCategory"/>
            <createData entity="SimpleMsiProduct" stepKey="simpleProduct"/>
            <createData entity="MsiCustomer1" stepKey="createCustomer"/>

        </before>
        <after>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedSource">
                <argument name="sourceCode" value="$$createSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin1"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="simpleCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteProduct"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Assign simple product to source and website.-->
        <amOnPage url="{{AdminProductEditPage.url($$simpleProduct.id$$)}}" stepKey="openProductEditPageToAssignSource"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignTestSourceToCreatedProduct">
            <argument name="sourceCode" value="$$createSource.source[source_code]$$"/>
        </actionGroup>

        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="fillQuantityField"/>
        <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveAndClose"/>

        <!-- Create order with simple product from admin area. -->
        <actionGroup ref="AdminNavigateToNewOrderPageExistingCustomerActionGroup" stepKey="createNewOrderForCustomer">
            <argument name="customer" value="$$createCustomer$$"/>
        </actionGroup>
        <conditionalClick selector="#store_1" dependentSelector="#order-store-selector" visible="true" stepKey="clickOnDefaultStoreViewIfPresent"/>
        <waitForPageLoad time="20" stepKey="waitForPageLoad"/>
        <actionGroup ref="AddSimpleProductToOrderActionGroup" stepKey="addSimpleProductToOrder">
            <argument name="product" value="$$simpleProduct$$"/>
            <argument name="productQty" value="5"/>
        </actionGroup>
        <waitForPageLoad time="20" stepKey="waitForPageLoadOrder"/>
        <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="selectFlatRateShipping"/>
        <click selector="{{AdminOrderFormActionSection.SubmitOrder}}" stepKey="clickSubmitOrder"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="You created the order." stepKey="seeSuccessMessageOrderPlaced"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderNumber"/>
        <grabFromCurrentUrl regex="~/order_id/(\d+)/~" stepKey="orderId"/>

        <!-- Verify quantity of simple product on test stock after placing order-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndex2"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad26"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="filterSearchResults3">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="{{SimpleMsiProduct.sku}}"/>
        </actionGroup>
        <see selector="{{AdminGridRow.rowOne}}" userInput="$$additionalStock.stock[sku]$$" stepKey="seeUpdatedQuantity1"/>
        <see selector="{{AdminGridRow.rowOne}}" userInput="$$additionalStock.stock[name]$$" stepKey="seeUpdatedQuantity2"/>
        <see selector="{{AdminGridRow.rowOne}}" userInput="95" stepKey="seeUpdatedQuantity3"/>

        <!--Create Invoice-->
        <actionGroup ref="AdminOpenOrderByEntityIdActionGroup" stepKey="openOrder">
            <argument name="entityId" value="{$orderId}"/>
        </actionGroup>
        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoice"/>
        <waitForPageLoad stepKey="waitPageToBeLoaded"/>
        <actionGroup ref="SubmitInvoiceActionGroup" stepKey="submitInvoice"/>
        <waitForPageLoad stepKey="waitForInvoiceSubmitted"/>
        <!-- Create partial shipment -->
        <click selector="{{AdminOrderDetailsMainActionsSection.ship}}" stepKey="clickShip"/>
        <waitForLoadingMaskToDisappear stepKey="waitForShipLoadingMask"/>
        <fillField selector="{{AdminShipmentItemsSection.itemQtyToShip('1')}}" userInput="3" stepKey="shipPartialQuantity"/>
        <click selector="{{AdminShipmentMainActionsSection.submitShipment}}" stepKey="submitShipment"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The shipment has been created." stepKey="seeShipmentCreateSuccess"/>

        <!--Admin Area Create Partial Credit Memo-->
        <click selector="{{AdminOrderDetailsMainActionsSection.creditMemo}}" stepKey="clickCreditMemo"/>
        <click selector="{{AdminCreditMemoItemsSection.itemReturnToStock('1')}}" stepKey="returnToStockCheckbox"/>
        <fillField selector="{{AdminCreditMemoItemsSection.itemQtyToRefund('1')}}" userInput="1" stepKey="partialRefund"/>
        <click selector="{{AdminCreditMemoItemsSection.updateQty}}" stepKey="updateQuantityToRefund"/>
        <waitForLoadingMaskToDisappear stepKey="updateQuantityLoadingMask"/>
        <click selector="{{AdminCreditMemoTotalSection.submitRefundOffline}}" stepKey="clickSubmit"/>

        <!--Admin Area Check quantities after Credit Memo-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckProductQtyAfterCreditMemo"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findVirtualProductBySkuToCheckQtyAfterCreditMemo">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1',$$createSource.source[name]$$)}}" userInput="97" stepKey="checkProductSourceQtyAfterCreditMemo"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1',$$additionalStock.stock[name]$$)}}" userInput="96" stepKey="checkSalableQtyAfterCreditMemo"/>
    </test>
</tests>
