<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminOrderWithSimpleProductOnDefaultStockCanceledFromAdminTest">
        <annotations>
            <stories value="Cancel Order Simple product"/>
            <title value="Order with Simple product on Default stock canceled from Admin."/>
            <description value="Order with Simple product on Default stock canceled from Admin."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735223/scenarios/2605764"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="MsiCustomer1" stepKey="customer"/>
            <!--Create additional source and stock.-->
            <createData entity="SimpleSubCategory" stepKey="simpleCategory"/>
            <createData entity="BasicMsiStock1" stepKey="additionalStock"/>
            <createData entity="FullSource1" stepKey="createSource"/>
            <createData entity="SourceStockLinked1" stepKey="linkSourceStock">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="createSource"/>
            </createData>
            <!--Assign Default Stock to Main Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>
            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
        </before>
        <after>
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedCustomSource">
                <argument name="sourceCode" value="$$createSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="simpleCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="additionalStock" stepKey="deleteCustomStock"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin1"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!-- Create order -->
        <actionGroup ref="AdminNavigateToNewOrderPageExistingCustomerActionGroup" stepKey="newOrder">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>
        <actionGroup ref="AddSimpleProductWithQtyToOrderActionGroup" stepKey="addFirstProductToOrder" >
            <argument name="product" value="$$simpleProduct$$"/>
            <argument name="productQty" value="5"/>
        </actionGroup>
        <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="selectFlatRate"/>
        <actionGroup ref="AdminSubmitOrderActionGroup" stepKey="submitOrder"/>
        <comment userInput="BIC workaround" stepKey="getOrderId"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderNumber"/>
        <grabFromCurrentUrl regex="~/order_id/(\d+)/~" stepKey="orderId"/>
        <assertNotEmpty stepKey="assertOrderIdIsNotEmpty">
			<actualResult type="const">$orderNumber</actualResult>
        </assertNotEmpty>

        <!-- Cancel whole  order from admin -->
        <actionGroup ref="CancelPendingOrderActionGroup" stepKey="cancelPendingOrder"/>

        <!--Verify that reservation '-5' items of 'Configurable product 1-red' on Default stock is created correctly -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckProductQty"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProductBySkuToCheckQty">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="checkProductSourceQty">
            <argument name="sourceName" value="{{_defaultSource.name}}"/>
            <argument name="stockName" value="{{_defaultStock.name}}"/>
            <argument name="sourceQty" value="1000"/>
            <argument name="stockQty" value="1000"/>
        </actionGroup>
    </test>
</tests>
