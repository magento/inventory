<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminOrderWithTwoSimpleProductsOnTestStockCanceledFromAdminAfterPartialInvoiceAndPartialShipmentTest">
        <annotations>
            <stories value="Add Order"/>
            <title value="Order with 2 Simple products on non-default stock canceled from Admin after partial invoice and partial shipment."/>
            <description value="Order with 2 Simple products on non-default stock canceled from Admin after partial invoice and partial shipment."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735223/scenarios/1637636"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="MsiCustomer1" stepKey="customer"/>
            <createData entity="SimpleSubCategory" stepKey="simpleCategory"/>
            <!--Create additional source and stock.-->
            <createData entity="FullSource1" stepKey="createSource"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="additionalStock" before="createSource"/>
            <createData entity="SourceStockLinked1" stepKey="linkSourceStock">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="createSource"/>
            </createData>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>
            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
            <createData entity="SimpleProduct" stepKey="simpleProduct2">
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
        </before>
        <after>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock" before="disableCreatedCustomSource">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedCustomSource">
                <argument name="sourceCode" value="$$createSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="simpleCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="additionalStock" stepKey="deleteCustomStock"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!-- assign first simple product to custom source -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="goToProductIndexPage"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterProduct" after="goToProductIndexPage">
            <argument name="product" value="$$simpleProduct$$"/>
        </actionGroup>
        <actionGroup ref="OpenProductForEditByClickingRowXColumnYInProductGridActionGroup" after="filterProduct" stepKey="openSecondProductForEdit"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignSourceToProduct" after="openSecondProductForEdit">
            <argument name="sourceCode" value="$$createSource.source[name]$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="setCustomSourceQuantity"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct" after="setCustomSourceQuantity"/>

        <!-- assign second simple product to custom source -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="goToProductIndexPage2"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterProduct2" after="goToProductIndexPage2">
            <argument name="product" value="$$simpleProduct2$$"/>
        </actionGroup>
        <actionGroup ref="OpenProductForEditByClickingRowXColumnYInProductGridActionGroup" after="filterProduct2" stepKey="openSecondProductForEdit2"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignSourceToProduct2" after="openSecondProductForEdit2">
            <argument name="sourceCode" value="$$createSource.source[name]$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="setCustomSourceQuantity2"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct2" after="setCustomSourceQuantity2"/>

        <!-- Create order -->
        <actionGroup ref="AdminNavigateToNewOrderPageExistingCustomerActionGroup" stepKey="newOrder">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>
        <actionGroup ref="AddSimpleProductWithQtyToOrderActionGroup" stepKey="addFirstProductToOrder" >
            <argument name="product" value="$$simpleProduct$$"/>
            <argument name="productQty" value="5"/>
        </actionGroup>
        <actionGroup ref="AddSimpleProductWithQtyToOrderActionGroup" stepKey="addSecondProductToOrder" >
            <argument name="product" value="$$simpleProduct2$$"/>
            <argument name="productQty" value="5"/>
        </actionGroup>
        <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="selectFlatRate"/>
        <actionGroup ref="AdminSubmitOrderActionGroup" stepKey="submitOrder"/>
        <comment userInput="BIC workaround" stepKey="getOrderId"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderNumber"/>
        <grabFromCurrentUrl regex="~/order_id/(\d+)/~" stepKey="orderId"/>
        <assertNotEmpty stepKey="assertOrderIdIsNotEmpty">
			<actualResult type="const">$orderNumber</actualResult>
        </assertNotEmpty>

        <!-- Invoice the order -->
        <actionGroup ref="GoToInvoiceIntoOrderActionGroup" stepKey="goToInvoiceIntoOrderPage"/>
        <fillField selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('1')}}" after="goToInvoiceIntoOrderPage" userInput="2" stepKey="ChangeQtyToInvoice"/>
        <fillField selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('2')}}" after="ChangeQtyToInvoice" userInput="3" stepKey="ChangeQtyToInvoice2"/>
        <click selector="{{AdminInvoiceItemsSection.updateQty}}" stepKey="updateQuantity" after="ChangeQtyToInvoice2"/>
        <waitForPageLoad time="20" stepKey="WaitForInvoiceQtyUpdate" after="updateQuantity"/>
        <actionGroup ref="SubmitInvoiceActionGroup" stepKey="submitInvoice" after="WaitForInvoiceQtyUpdate"/>

        <!-- Ship the order -->
        <actionGroup ref="GoToShipmentIntoOrderActionGroup" stepKey="goToShipment"  after="submitInvoice"/>
        <fillField selector="{{AdminShipmentItemsSection.itemQtyToShip('1')}}" userInput="2" stepKey="ship2Items" after="goToShipment"/>
        <fillField selector="{{AdminShipmentItemsSection.itemQtyToShip('2')}}" userInput="3" stepKey="ship2ItemsSecondProduct" after="ship2Items"/>
        <actionGroup ref="SubmitShipmentIntoOrderActionGroup" stepKey="submitShipment" after="ship2ItemsSecondProduct"/>

        <!-- Cancel whole  order from admin -->
        <click selector="{{AdminOrderDetailsMainActionsSection.cancel}}" stepKey="clickCancelOrder"/>
        <waitForElement selector="{{AdminConfirmationModalSection.message}}" stepKey="waitForCancelConfirmation"/>
        <see selector="{{AdminConfirmationModalSection.message}}" userInput="Are you sure you want to cancel this order?" stepKey="seeConfirmationMessage"/>
        <click selector="{{AdminConfirmationModalSection.ok}}" stepKey="confirmOrderCancel"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="You canceled the order." stepKey="seeCancelSuccessMessage"/>

        <!-- Check products Qty -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckProductQty"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProductBySkuToCheckQty">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="checkProductSourceQty" after="findProductBySkuToCheckQty">
            <argument name="sourceName" value="$$createSource.source[name]$$"/>
            <argument name="stockName" value="$$additionalStock.stock[name]$$"/>
            <argument name="sourceQty" value="98"/>
            <argument name="stockQty" value="98"/>
        </actionGroup>

        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProduct2IndexPageForCheckProductQty"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProduct2BySkuToCheckQty">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct2.sku$$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="checkProduct2SourceQty" after="findProduct2BySkuToCheckQty">
            <argument name="sourceName" value="$$createSource.source[name]$$"/>
            <argument name="stockName" value="$$additionalStock.stock[name]$$"/>
            <argument name="sourceQty" value="97"/>
            <argument name="stockQty" value="97"/>
        </actionGroup>
    </test>
</tests>
