<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminSimpleProductDisabledManageStockInConfigurationDefaultStockTest">
        <annotations>
            <stories value="Simple Product Default Stock."/>
            <title value="Simple Product Default Stock with Disabled Manage Stock In Configuration."/>
            <description value="Verify, simple product will be visible on storefront with out of stock status on default stock and turned off manage stock in configuration."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/911767/scenarios/2717987"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <!--Create test data.-->
            <createData entity="_minimalSource" stepKey="source"/>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="SimpleProduct" stepKey="product">
                <requiredEntity createDataKey="category"/>
            </createData>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <!--Set product quantity and set to out of stock.-->
            <amOnPage url="{{AdminProductEditPage.url($$product.id$$)}}" stepKey="openProductPage"/>
            <fillField selector="{{AdminProductSourcesGrid.rowQty('0')}}" userInput="{{defaultProductQty.value}}" stepKey="setQuantity"/>
            <selectOption selector="{{AdminProductSourcesGrid.rowStatus('0')}}" userInput="{{SourceStatusOutOfStock.value}}" stepKey="setProductToOutOfStock"/>
            <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveProduct"/>
        </before>
        <after>
            <!-- Turn On Manage Stock-->
            <magentoCLI command="config:set {{TurnOnManageStockConfig.path}} {{TurnOnManageStockConfig.value}}" stepKey="enableManageStock"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>
            <!--Delete created data.-->
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <!--Disable additional source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedSource">
                <argument name="sourceCode" value="$source.source[source_code]$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdminArea"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex1">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>
        <!--Verify product is not visible on storefront.-->
        <actionGroup ref="AssertStorefrontProductAbsentOnCategoryPageActionGroup" stepKey="verifyProductNotVisibleOnStorefront">
            <argument name="categoryUrlKey" value="$category.url_key$"/>
            <argument name="productName" value="$product.name$"/>
        </actionGroup>
        <!-- Turn off Manage Stock-->
        <magentoCLI command="config:set {{TurnOffManageStockConfig.path}} {{TurnOffManageStockConfig.value}}" stepKey="disableManageStock"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
            <argument name="tags" value=""/>
        </actionGroup>
        <!--Verify product is visible on storefront.-->
        <actionGroup ref="AssertProductInStorefrontCategoryPage" stepKey="checkConfigurableIsPresentOnCategoryPage">
            <argument name="category" value="$category$"/>
            <argument name="product" value="$product$"/>
        </actionGroup>
    </test>
</tests>
