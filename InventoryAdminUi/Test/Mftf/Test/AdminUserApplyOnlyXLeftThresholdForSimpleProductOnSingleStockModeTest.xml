<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminUserApplyOnlyXLeftThresholdForSimpleProductOnSingleStockModeTest">
        <annotations>
            <stories value="CatalogInventory stock option"/>
            <title value="Admin user apply 'Only X left Threshold' for Simple product on Single stock mode"/>
            <description value="In Single Stock mode you should be able to create order with simple order and enabled config 'Only X left Threshold'."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/457014/scenarios/1953224"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="single_mode"/>
            <group value="pr_exclude"/>
        </annotations>

        <before>
            <comment userInput="Fill config 'Only X left Threshold'." stepKey="fillConfigComment"/>
            <magentoCLI command="config:set cataloginventory/options/stock_threshold_qty 500" stepKey="fillConfigValue"/>

            <comment userInput="Perform reindex and cache flush after fill 'Only X left Threshold' configuration config." stepKey="reindexCacheFlushAfterFillThresholdConfigComment"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterFillThresholdConfig">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterFillThresholdConfig">
                <argument name="tags" value=""/>
            </actionGroup>

            <createData entity="SimpleSubCategory" stepKey="createCategory"/>
            <createData entity="SimpleProduct" stepKey="createSimpleProduct">
                <field key="price">10.00</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="Msi_US_Customer" stepKey="createCustomer"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>

            <comment userInput="Assign main website to default stock" stepKey="assignChannelToStockComment"/>
            <amOnPage url="{{AdminManageStockPage.url}}" stepKey="navigateToStockListPageToAssignMainWebsiteToDefaultStock"/>
            <waitForPageLoad time="30" stepKey="waitForStockListPageLoad"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchDefaultStockByNameForAssignMainWebsiteChannel">
                <argument name="keyword" value="_defaultStock.name"/>
            </actionGroup>
            <click selector="{{AdminGridRow.editByValue(_defaultStock.name)}}" stepKey="clickEditDefaultStock"/>
            <waitForPageLoad time="30" stepKey="waitForDefaultStockPageLoaded"/>
            <selectOption selector="{{AdminEditStockSalesChannelsSection.websites}}" userInput="Main Website" stepKey="selectDefaultWebsiteAsSalesChannelForDefaultStock"/>
            <click selector="{{AdminGridMainControls.saveAndContinue}}" stepKey="saveDefaultStock"/>
        </before>
        <after>
            <comment userInput="Revert config 'Only X left Threshold' changes." stepKey="revertConfigChangesComment"/>
            <magentoCLI command="config:set cataloginventory/options/stock_threshold_qty 0" stepKey="revertConfigValue"/>

            <comment userInput="Perform reindex and cache flush after revert 'Only X left Threshold' configuration config." stepKey="reindexCacheFlushAfterFillThresholdConfigComment"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterRevertThresholdConfig">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterRevertThresholdConfig">
                <argument name="tags" value=""/>
            </actionGroup>

            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdminArea"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteProduct"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
        </after>

        <comment userInput="Customer login to storefront." stepKey="customerLoginToStorefrontComment"/>
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>

        <comment userInput="Add product to cart" stepKey="addProductToCartComment"/>
        <amOnPage url="{{StorefrontCategoryPage.url($$createCategory.custom_attributes[url_key]$$)}}" stepKey="navigateToCategory"/>
        <waitForPageLoad time="30" stepKey="waitForCategoryPageLoad"/>
        <click selector="{{StorefrontCategoryMainSection.specifiedProductItemInfo($$createSimpleProduct.product[name]$$)}}" stepKey="openProductPage"/>
        <waitForAjaxLoad stepKey="waitForImageLoader"/>
        <fillField selector="{{StorefrontProductPageSection.qtyInput}}" userInput="500" stepKey="fillCorrectQuantity"/>
        <click selector="{{StorefrontProductPageSection.addToCartBtn}}" stepKey="addProductToCart"/>
        <waitForElementVisible selector="{{StorefrontProductPageSection.successMsg}}" time="30" stepKey="waitForProductAdded"/>
        <conditionalClick selector="{{StorefrontMinicartSection.showCart}}" dependentSelector="{{StorefrontMinicartSection.miniCartOpened}}" visible="false" stepKey="openMiniCart"/>
        <waitForElementVisible selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForViewAndEditCartVisible"/>
        <click selector="{{StorefrontMinicartSection.goToCheckout}}" stepKey="goToCheckout"/>
        <waitForElementClickable selector="{{CheckoutShippingMethodsSection.firstShippingMethod}}" stepKey="waitForShippingMethodsLoad"/>
        <click selector="{{CheckoutShippingMethodsSection.firstShippingMethod}}" stepKey="selectShippingMethod"/>
        <comment userInput="BIC workaround" stepKey="waitForNextButtonVisible"/>
        <actionGroup ref="StorefrontCheckoutClickNextButtonActionGroup" stepKey="navigateToSecondCheckoutStep"/>
        <comment userInput="BIC workaround" stepKey="waitFroPaymentSelectionPageLoad"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyOrderPayment"/>
        <waitForElement selector="{{CheckoutPaymentSection.placeOrder}}" time="30" stepKey="waitForPlaceOrderButtonVisible"/>
        <see selector="{{CheckoutPaymentSection.billingAddress}}" userInput="{{US_Address_TX.street[0]}}" stepKey="chooseBillingAddress"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>
        <comment userInput="BIC workaround" stepKey="waitUntilOrderPlaced"/>
        <see selector="{{CheckoutSuccessMainSection.success}}" userInput="Your order number is:" stepKey="checkOrderPlaceSuccessMessage"/>

        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterFillThresholdConfig">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterFillThresholdConfig">
            <argument name="tags" value=""/>
        </actionGroup>

        <comment userInput="Verify that message 'Only 500 left' appeared on product page on frontend." stepKey="verifyMessageIsDisplayedComment"/>
        <amOnPage url="{{StorefrontCategoryPage.url($$createCategory.custom_attributes[url_key]$$)}}" stepKey="navigateToCategoryForVerifyMessage"/>
        <waitForPageLoad time="30" stepKey="waitForCategoryPageLoadForVerifyMessage"/>
        <click selector="{{StorefrontCategoryMainSection.specifiedProductItemInfo(SimpleProduct.name)}}" stepKey="openProductPageForVerifyMessage"/>
        <waitForAjaxLoad stepKey="waitForImageLoaderForVerifyMessage"/>
        <see selector=".availability.only" userInput="Only 500 left" stepKey="checkProductsLeftMessage"/>
    </test>
</tests>
