<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ElasticSearchLayeredNavigationTest">
        <annotations>
            <stories value="Elasticsearch layered navigation"/>
            <title value="Elasticsearch layered navigation on default stock, simple product."/>
            <description value="Verify, category page and Layered Navigation for Simple Products on Default stock with Elasticsearch enabled."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/441590/scenarios/2688565"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <group value="SearchEngine"/>
        </annotations>

        <before>
            <!-- Assign Main Website to Default Stock -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <amOnPage url="{{AdminManageStockPage.url}}" stepKey="navigateToStockIndexPage"/>
            <waitForPageLoad time="30" stepKey="waitForStockGridPageLoad"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchDefaultStockByKeyword">
                <argument name="keyword" value="_defaultStock.name"/>
            </actionGroup>
            <click selector="{{AdminGridRow.editByValue(_defaultStock.name)}}" stepKey="clickOnEditForDefaultStock"/>
            <waitForPageLoad time="30" stepKey="waitForStockEditPageLoad"/>
            <selectOption selector="{{AdminEditStockSalesChannelsSection.websites}}" userInput="Main Website" stepKey="selectWebsiteAsSalesChannel"/>
            <click selector="{{AdminGridMainControls.saveAndContinue}}" stepKey="saveDefaultStock"/>
            <!--Create Simple Products.-->
            <createData entity="SimpleSubCategory" stepKey="simpleCategory"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct1">
                <field key="price">10.00</field>
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
            <createData entity="SimpleProduct" stepKey="simpleProduct2">
                <field key="price">40.00</field>
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
            <!--Create additional source and stock.-->
            <createData entity="BasicMsiStock1" stepKey="additionalStock"/>
            <createData entity="FullSource1" stepKey="additionalSource"/>
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="additionalSource"/>
            </createData>

            <comment userInput="BIC workaround" stepKey="reindexInvalidatedIndices"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterElasticSearchEnable">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCacheAfterElasticSearchEnable">
                <argument name="tags" value="full_page"/>
            </actionGroup>
        </before>
        <after>
            <!--Disable created test source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedCustomSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <!--Delete created products and stock.-->
            <deleteData createDataKey="additionalStock" stepKey="deleteAdditionalStock"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="simpleCategory" stepKey="deleteCategory"/>

            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterElasticSearchDisable">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterElasticSearchDisable">
                <argument name="tags" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin1"/>
        </after>

        <!--Verify products are visible on storefront page.-->
        <amOnPage url="{{StorefrontCategoryPage.url($$simpleCategory.custom_attributes[url_key]$$)}}" stepKey="navigateToCategoryToVerifyProductsAreVisible"/>
        <waitForPageLoad time="30" stepKey="waitForCategoryPageIsLoadToVerifyProductIsNotVisible"/>
        <see userInput="$$simpleProduct1.name$$" stepKey="verifyProduct1IsVisible"/>
        <see userInput="$$simpleProduct2.name$$" stepKey="verifyProduct2IsVisible"/>
        <!--Verify prices in layered navigation.-->
        <click selector="{{StorefrontLayeredNavigationSection.shoppingOptionsByName('Price')}}" stepKey="openLayeredNavigation"/>
        <see userInput="$10.00 - $19.99" selector="//a[contains(@href, 'price=10-20')]" stepKey="verifySmallerPriceRange"/>
        <see userInput="40.00 and above" selector="//a[contains(@href, 'price=40')]" stepKey="verifyLargerPriceRange"/>
    </test>
</tests>
