<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ElasticSearchQuickAdvancedSearchAdditionalStockProductTest">
        <annotations>
            <stories value="Elasticsearch quick and advanced search additional stock."/>
            <title value="Elasticsearch quick and advanced search on additional stock, simple product."/>
            <description value="Quick and Advanced Catalog Search for Simple Product on Addtional stock with Elasticsearch enabled."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/441590/scenarios/2684477"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <group value="SearchEngine"/>
        </annotations>

        <before>
            <!--Create Simple Products.-->
            <createData entity="SimpleSubCategory" stepKey="simpleCategory"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct1">
                <field key="price">10.00</field>
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
            <createData entity="SimpleProduct" stepKey="simpleProduct2">
                <field key="price">40.00</field>
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
            <!--Create additional source and stock.-->
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="additionalStock"/>
            <createData entity="FullSource1" stepKey="additionalSource"/>
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="additionalSource"/>
            </createData>
            <!--Assign created source to products.-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <amOnPage url="{{AdminProductEditPage.url($$simpleProduct1.id$$)}}" stepKey="openProduct1EditPageToAssignSource"/>
            <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignTestSourceToCreatedProduct1">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="setProduct1Quantity"/>
            <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveEditedSimpleProduct1"/>
            <amOnPage url="{{AdminProductEditPage.url($$simpleProduct2.id$$)}}" stepKey="openProduct2EditPageToAssignSource"/>
            <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignTestSourceToCreatedProduct2">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="setProduct2Quantity"/>
            <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveEditedSimpleProduct2"/>

            <comment userInput="BIC workaround" stepKey="reindexInvalidatedIndices"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterElasticSearchEnable">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCacheAfterElasticSearchEnable">
                <argument name="tags" value="full_page"/>
            </actionGroup>
        </before>
        <after>
            <!-- Assign Main Website to Default Stock -->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <comment userInput="BIC workaround" stepKey="navigateToStockIndexPage"/>
            <comment userInput="BIC workaround" stepKey="waitForStockGridPageLoad"/>
            <comment userInput="BIC workaround" stepKey="searchDefaultStockByKeyword"/>
            <comment userInput="BIC workaround" stepKey="clickOnEditForDefaultStock"/>
            <comment userInput="BIC workaround" stepKey="waitForStockEditPageLoad"/>
            <comment userInput="BIC workaround" stepKey="selectWebsiteAsSalesChannel"/>
            <comment userInput="BIC workaround" stepKey="saveDefaultStock"/>
            <!--Disable created test source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedCustomSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <!--Delete created products, category and stock.-->
            <deleteData createDataKey="additionalStock" stepKey="deleteAdditionalStock"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="simpleCategory" stepKey="deleteCategory"/>

            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindexAfterElasticSearchDisable">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCacheAfterElasticSearchDisable">
                <argument name="tags" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin1"/>
        </after>
        <!--Quick search created product.-->
        <amOnPage url="{{StorefrontHomePage.url}}" stepKey="navigateToStorefront"/>
        <actionGroup ref="StorefrontCheckQuickSearchActionGroup" stepKey="searchForProduct">
            <argument name="phrase" value="$$simpleProduct1.name$$"/>
        </actionGroup>
        <!--Verify searched product.-->
        <actionGroup ref="StorefrontOpenProductFromQuickSearchActionGroup" stepKey="verifyFoundProduct">
            <argument name="productName" value="$$simpleProduct1.name$$"/>
            <argument name="productUrlKey" value="$$simpleProduct1.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!--Advanced search created product.-->
        <actionGroup ref="GoToStoreViewAdvancedCatalogSearchActionGroup" stepKey="goToStoreViewAdvancedCatalogSearchActionGroup"/>
        <actionGroup ref="StorefrontAdvancedCatalogSearchByProductNameActionGroup" stepKey="searchSecondProduct">
            <argument name="name" value="$$simpleProduct2.name$$"/>
        </actionGroup>
        <!--Verify searched product.-->
        <actionGroup ref="StorefrontCheckAdvancedSearchResultActionGroup" stepKey="storefrontCheckAdvancedSearchResult"/>
        <see userInput="1 item" selector="{{StorefrontCatalogSearchAdvancedResultMainSection.itemFound}}" stepKey="verifyProductCount"/>
        <see userInput="$$simpleProduct2.name$$" selector="{{StorefrontCatalogSearchAdvancedResultMainSection.productName}}" stepKey="verifyProductName"/>
    </test>
</tests>
