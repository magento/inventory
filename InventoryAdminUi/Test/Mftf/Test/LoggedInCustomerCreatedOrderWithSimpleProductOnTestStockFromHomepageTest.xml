<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="LoggedInCustomerCreatedOrderWithSimpleProductOnTestStockFromHomepageTest">
        <annotations>
            <stories value="Logged In Customer created Order with Simple product on Test stock from Homepage"/>
            <title value="Logged In Customer created Order with Simple product on Test stock from Homepage."/>
            <description value="/scenarios/1408755"/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/419534/scenarios/1408755"/>
            <severity value="BLOCKER"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <magentoCLI stepKey="enableFreeShipping" command="config:set carriers/freeshipping/active 1" />
            <magentoCLI stepKey="disableFreeShipping" command="config:set carriers/freeshipping/active 0"/>
            <createData entity="MsiCustomer1" stepKey="createCustomer"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="createStock"/>
            <createData entity="FullSource1" stepKey="createSource"/>
            <createData entity="SourceStockLinked1" stepKey="linkSourceStock">
                <requiredEntity createDataKey="createStock"/>
                <requiredEntity createDataKey="createSource"/>
            </createData>
            <createData entity="SimpleSubCategory" stepKey="simpleCategory"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <field key="qty">100.00</field>
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>
        </before>
        <after>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableThirdCreatedSource">
                <argument name="sourceCode" value="$$createSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="simpleCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteProduct"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!-- As Admin, find the Product to edit -->
        <actionGroup ref="AdminGoToProductGridFilterResultsByInputEditProduct" stepKey="goToProductGridFilterResultsByInputEditProduct1">
            <argument name="filter_selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="filter_value" value="SimpleProduct.sku"/>
        </actionGroup>

        <!-- As Admin, assign a source to the product -->
        <actionGroup ref="AdminOnProductEditPageAssignSourceToProduct" stepKey="AdminOnProductEditPageAssignSourceToProduct1">
            <argument name="filter_selector" value="AdminManageSourcesGridFilterControls.code"/>
            <argument name="filter_value" value="$$createSource.source[source_code]$$"/>
        </actionGroup>
        <!--Set qty to 100-->
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="fillSourceQuantityField"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="clickOnSaveButton1"/>

        <!-- Login as customer -->
        <comment userInput="Login to storefront as customer." stepKey="loginToStorefrontComment"/>
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>

        <!-- Purchase product -->
        <comment userInput="Purchase the created product" stepKey="PurchaseProduct"/>
        <comment userInput="Purchase 5 simple product" stepKey="purchaseSimpleProductComment"/>
        <amOnPage url="{{StorefrontCategoryPage.url($$simpleCategory.custom_attributes[url_key]$$)}}" stepKey="navigateToCategoryPage"/>
        <moveMouseOver selector="{{StorefrontCategoryProductSection.ProductInfoByName($$simpleProduct.name$$)}}" stepKey="moveMouseOverProduct" />
        <click selector="{{StorefrontCategoryProductSection.ProductAddToCartByName($$simpleProduct.name$$)}}" stepKey="clickAddToCart" />
        <waitForElement selector="{{StorefrontMessagesSection.messageProductAddedToCart($$simpleProduct.name$$)}}" time="30" stepKey="assertMessage"/>
        <waitForText userInput="1" selector="{{StorefrontMinicartSection.productCount}}" time="30" stepKey="assertProductCount"/>
        <conditionalClick selector="{{StorefrontMinicartSection.showCart}}" dependentSelector="{{StorefrontMinicartSection.miniCartOpened}}" visible="false" stepKey="openMiniCart"/>
        <waitForElementVisible selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForViewAndEditCartVisible"/>

        <click selector="{{StorefrontMinicartSection.itemQuantity($$simpleProduct.name$$)}}" stepKey="clickOnQtyField1"/>
        <pressKey selector="{{StorefrontMinicartSection.itemQuantity($$simpleProduct.name$$)}}" userInput="\Facebook\WebDriver\WebDriverKeys::DELETE" stepKey="deleteExistingText1"/>

        <fillField selector="{{StorefrontMinicartSection.itemQuantity($$simpleProduct.name$$)}}" userInput="5" stepKey="setProductQtyToFiftyInMiniCart"/>
        <click selector="{{StorefrontMinicartSection.itemQuantityUpdate($$simpleProduct.name$$)}}" stepKey="updateQtyInMiniCart"/>
        <click selector="{{StorefrontMinicartSection.goToCheckout}}" stepKey="goToCheckout"/>
        <waitForPageLoad stepKey="waitForPaymentSelectionPageLoad"/>
        <actionGroup ref="StorefrontCheckoutClickNextButtonActionGroup" stepKey="clickOnNextPaymentPage"/>
        <comment userInput="BIC workaround" stepKey="waitForPageLoadCheckoutSelectPayment"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyOrderPayment"/>
        <comment userInput="BIC workaround" stepKey="waitForPlaceOrderButtonVisible"/>
        <see selector="{{CheckoutPaymentSection.billingAddress}}" userInput="{{US_Address_TX.street[0]}}" stepKey="chooseBillingAddress"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>
        <comment userInput="BIC workaround" stepKey="waitUntilOrderPlaced"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="grabOrderNumber"/>
        <see selector="{{CheckoutSuccessMainSection.success}}" userInput="Your order number is:" stepKey="checkOrderPlaceSuccessMessage"/>

        <!-- Admin area check ordered quantity -->
        <comment userInput="Admin - Check ordered quantity" stepKey="AdminCheckOrderedQuantity"/>
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrder">
            <argument name="orderId" value="{$grabOrderNumber}"/>
        </actionGroup>
        <waitForElementVisible selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" stepKey="waitForViewOrderedQuantity"/>
        <see selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" userInput="Ordered 5" stepKey="orderedQuantity"/>

        <!--Admin Area Check source quantity and salable quantity-->
        <comment userInput="Admin - Check Source quantity and salable quantity after order placed" stepKey="AdminCheckQuantityAfterOrderPlaced"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckProductQtyAfterPlaceOrder"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findVirtualProductBySkuToCheckQtyAfterPlaceOrder">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1',$$createSource.source[name]$$)}}" userInput="100" stepKey="checkProductSourceQtyAfterPlaceOrder"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1',$$createStock.stock[name]$$)}}" userInput="95" stepKey="checkSalableQtyAfterPlaceOrder"/>

        <!--Admin area Reorder-->
        <comment userInput="Admin - Reorder" stepKey="ReorderFromAdmin"/>


    </test>
</tests>
