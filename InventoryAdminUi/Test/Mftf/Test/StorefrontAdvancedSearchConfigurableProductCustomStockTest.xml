<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontAdvancedSearchConfigurableProductCustomStockTest">
        <annotations>
            <stories value="Configurable Product Custom Stock."/>
            <title value="Advanced Search Configurable Product on Custom Stock."/>
            <description value="Verify customer able to search configurable product with advanced search on custom stock."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/441590/scenarios/1518023"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <group value="pr_exclude"/>
        </annotations>

        <before>
            <!--Create test data.-->
            <createData entity="AdvancedSearchConfigurableMsiProduct" stepKey="product"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="stock"/>
            <createData entity="FullSource1" stepKey="source"/>
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink">
                <requiredEntity createDataKey="stock"/>
                <requiredEntity createDataKey="source"/>
            </createData>
            <!--Generate configurable variations.-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <amOnPage url="{{AdminProductEditPage.url($product.id$)}}" stepKey="openConfigurableProductEditPage"/>
            <click selector="{{AdminProductFormConfigurationsSection.createConfigurations}}" stepKey="clickOnTheCreateConfigurationsButton"/>
            <waitForElementVisible selector="{{AdminConfigurableProductSelectAttributesSlideOut.grid}}" time="30" stepKey="waitForGridPresents"/>
            <click selector="{{AdminGridRow.checkboxByValue('color')}}" stepKey="selectColorAttribute"/>
            <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToSecondStep"/>
            <click selector="{{AdminCreateProductConfigurationsPanel.createNewValue}}" stepKey="addNewColorWhite"/>
            <fillField userInput="{{colorProductAttribute1.name}}" selector="{{AdminCreateProductConfigurationsPanel.attributeName}}" stepKey="setNameWhite"/>
            <click selector="{{AdminCreateProductConfigurationsPanel.saveAttribute}}" stepKey="saveWhiteColor"/>
            <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToThirdStep"/>
            <click selector="{{AdminCreateProductConfigurationsPanel.applySingleQuantityToEachSkus}}" stepKey="clickOnApplySingleQuantityToEachSku"/>
            <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.assignSources}}" stepKey="openSelectSourcesModalWindow"/>
            <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearSourcesFilter"/>
            <actionGroup ref="SearchAdminDataGridByKeywordActionGroup" stepKey="searchCustomSourceByNameForAssignment">
                <argument name="keyword" value="$source.source[name]$"/>
            </actionGroup>
            <click selector="{{AdminGridRow.checkboxByValue($source.source[name]$)}}" stepKey="selectCustomSource"/>
            <click selector="{{AdminConfigurableProductAssignSourcesSlideOut.done}}" stepKey="daneAssignSources"/>
            <fillField selector="{{AdminConfigurableProductAssignSourcesSlideOut.quantityPerSourceForMultiMode}}" userInput="{{defaultProductQty.value}}" stepKey="fillQuantityForCustomSource"/>
            <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="navigateToFourthStep"/>
            <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="doneGeneratingConfigurableVariations"/>
            <click selector="{{AdminProductFormSection.save}}" stepKey="saveConfigurableProduct"/>
            <conditionalClick selector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" dependentSelector="{{AdminChooseAffectedAttributeSetPopup.confirm}}" visible="true" stepKey="confirmDefaultAttributeSetForConfigurableProduct"/>
            <!--Set configurable product stock status.-->
            <amOnPage url="{{AdminProductEditPage.url($product.id$)}}" stepKey="openProductEditPage"/>
            <selectOption selector="{{AdminProductFormSection.productStockStatus}}" userInput="In Stock" stepKey="setProductStockStatus"/>
            <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveProduct"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCache">
                <argument name="tags" value=""/>
            </actionGroup>
        </before>
        <after>
            <!-- Delete configurable product -->
            <actionGroup ref="DeleteProductUsingProductGridActionGroup" stepKey="deleteProduct">
                <argument name="product" value="$product$"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilters"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <deleteData createDataKey="stock" stepKey="deleteStock"/>
            <!--Disable created source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableSource">
                <argument name="sourceCode" value="$$source.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <!--Advanced search product by name.-->
        <actionGroup ref="GoToStoreViewAdvancedCatalogSearchActionGroup" stepKey="navigateToAdvancedSearchToSearchByName"/>
        <actionGroup ref="StorefrontAdvancedCatalogSearchByProductNameActionGroup" stepKey="searchProductByName">
            <argument name="name" value="$product.name$"/>
        </actionGroup>
        <!--Verify searched product by name.-->
        <actionGroup ref="StorefrontQuickSearchCheckProductNameInGridActionGroup" stepKey="verifyProductSearchedByName">
            <argument name="productName" value="$product.name$"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!--Advanced search product by sku.-->
        <actionGroup ref="GoToStoreViewAdvancedCatalogSearchActionGroup" stepKey="navigateToAdvancedSearchToSearchBySku"/>
        <actionGroup ref="StorefrontAdvancedCatalogSearchByProductSkuActionGroup" stepKey="searchProductBySku">
            <argument name="sku" value="$product.sku$"/>
        </actionGroup>
        <!--Verify searched product by sku.-->
        <actionGroup ref="StorefrontQuickSearchCheckProductNameInGridActionGroup" stepKey="verifyProductSearchedBySku">
            <argument name="productName" value="$product.name$"/>
            <argument name="index" value="1"/>
        </actionGroup>
    </test>
</tests>
