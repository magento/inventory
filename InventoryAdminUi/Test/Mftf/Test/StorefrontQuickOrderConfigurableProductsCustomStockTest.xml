<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontQuickOrderConfigurableProductsCustomStockTest" extends="StorefrontQuickOrderAddToCartTest">
        <annotations>
            <stories value="Configurable Product Custom Stock."/>
            <title value="Storefront Quick Order With Configurable Products On Custom Stock."/>
            <description value="Verify, customer able to create quick order with couple configurable products on custom stock."/>
            <severity value="MAJOR"/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/987821/scenarios/3364694"/>
            <group value="msi_b2b"/>
            <group value="multi_mode"/>
        </annotations>
        <before>
            <remove keyForRemoval="createProduct"/>
            <createData entity="Simple_US_Customer" stepKey="customer"/>
            <createData entity="SimpleProduct2" stepKey="product"/>
            <createData entity="_defaultCategory" stepKey="category"/>
            <!--Create sources and stock.-->
            <createData entity="_minimalSource" stepKey="source1"/>
            <createData entity="_minimalSource" stepKey="source2"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="stock"/>
            <!--Link additional sources with stock.-->
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink1">
                <requiredEntity createDataKey="stock"/>
                <requiredEntity createDataKey="source1"/>
            </createData>
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink2">
                <requiredEntity createDataKey="stock"/>
                <requiredEntity createDataKey="source2"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdmin"/>
            <!--Create configurable product1.-->
            <createData entity="ApiConfigurableProduct" stepKey="configurableProduct1">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="productAttributeWithTwoOptions" stepKey="configurableProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="configurableProductAttributeOption">
                <requiredEntity createDataKey="configurableProductAttribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="addAttributeToDefaultAttributeSet">
                <requiredEntity createDataKey="configurableProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption">
                <requiredEntity createDataKey="configurableProductAttribute"/>
            </getData>
            <createData entity="ApiSimpleOne" stepKey="configurableChildProduct1">
                <requiredEntity createDataKey="configurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
            </createData>
            <createData entity="ConfigurableProductOneOption" stepKey="configurableProductOption1">
                <requiredEntity createDataKey="configurableProduct1"/>
                <requiredEntity createDataKey="configurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="configurableProductAddChild1">
                <requiredEntity createDataKey="configurableProduct1"/>
                <requiredEntity createDataKey="configurableChildProduct1"/>
            </createData>
            <!--Create configurable product2.-->
            <createData entity="ApiConfigurableProduct" stepKey="configurableProduct2">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="ApiSimpleOne" stepKey="configurableChildProduct2">
                <requiredEntity createDataKey="configurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
            </createData>
            <createData entity="ConfigurableProductOneOption" stepKey="configurableProductOption2">
                <requiredEntity createDataKey="configurableProduct2"/>
                <requiredEntity createDataKey="configurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="configurableProductAddChild2">
                <requiredEntity createDataKey="configurableProduct2"/>
                <requiredEntity createDataKey="configurableChildProduct2"/>
            </createData>
            <!--Assign source to configurable product1.-->
            <amOnPage url="{{AdminProductEditPage.url($configurableChildProduct1.id$)}}" stepKey="openConfigurableChild1ProductPage"/>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct1">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignSourceToProduct1">
                <argument name="sourceCode" value="$source1.source[source_code]$"/>
            </actionGroup>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveConfigurableVariation1"/>
            <!--Assign source to configurable product2.-->
            <amOnPage url="{{AdminProductEditPage.url($configurableChildProduct2.id$)}}" stepKey="openConfigurableChild2ProductPage"/>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct2">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignSourceToProduct2">
                <argument name="sourceCode" value="$source2.source[source_code]$"/>
            </actionGroup>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveConfigurableVariation2"/>
        </before>
        <after>
            <remove keyForRemoval="deleteProduct"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="configurableChildProduct1" stepKey="deleteConfigurableChildProduct1"/>
            <deleteData createDataKey="configurableProduct1" stepKey="deleteConfigurableProduct1"/>
            <deleteData createDataKey="configurableChildProduct2" stepKey="deleteConfigurableChildProduct2"/>
            <deleteData createDataKey="configurableProduct2" stepKey="deleteConfigurableProduct2"/>
            <deleteData createDataKey="configurableProductAttribute" stepKey="deleteAttribute"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <deleteData createDataKey="stock" stepKey="deleteStock"/>
            <!--Disable created additional source1.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableSource1">
                <argument name="sourceCode" value="$source1.source[source_code]$"/>
            </actionGroup>
            <!--Disable created additional source2.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableSource2">
                <argument name="sourceCode" value="$source2.source[source_code]$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <remove keyForRemoval="quickOrderAddProductToCart"/>
        <!--Quick order configurable product1.-->
        <fillField selector="{{StorefrontQuickOrderSection.enterSkuOrProductName}}" userInput="$configurableProduct1.sku$" stepKey="setProduct1Sku"/>
        <click selector="{{StorefrontQuickOrderSection.Qty}}" stepKey="clickProduct1ToQty"/>
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCart}}" stepKey="waitAddToCartProduct1BecomeEnabled"/>
        <click selector="{{StorefrontQuickOrderSection.addToCart}}" stepKey="clickAddToCartProduct1CorrectItem"/>
        <click selector="{{CheckoutCartProductSection.productOptionsLink}}" stepKey="configureConfigurableProduct1"/>
        <waitForElement selector="{{StorefrontProductInfoMainSection.productOptionSelect($configurableProductAttribute.attribute[frontend_labels][0][label]$)}}" stepKey="waitForOption1" />
        <selectOption selector="{{StorefrontProductInfoMainSection.productOptionSelect($configurableProductAttribute.attribute[frontend_labels][0][label]$)}}" userInput="$getConfigAttributeOption.value$" stepKey="selectOption1"/>
        <fillField selector="{{StorefrontProductPageSection.qtyInput}}" userInput="{{tenPiecesAddToCart.value}}" stepKey="fillProduct1Quantity"/>
        <click selector="{{StorefrontCustomerOrderBySkuSection.updateCart}}" stepKey="clickOnAddProduct1ToCartButton"/>
        <!--Quick order configurable product2.-->
        <amOnPage url="{{StorefrontQuickOrderPage.url}}" stepKey="goQuickOrderPageProduct2"/>
        <fillField selector="{{StorefrontQuickOrderSection.enterSkuOrProductName}}" userInput="$configurableProduct2.sku$" stepKey="setProduct2Sku"/>
        <click selector="{{StorefrontQuickOrderSection.Qty}}" stepKey="clickProduct2ToQty"/>
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCart}}" stepKey="waitAddToCartProduct2BecomeEnabled"/>
        <click selector="{{StorefrontQuickOrderSection.addToCart}}" stepKey="clickAddToCartProduct2CorrectItem"/>
        <click selector="{{CheckoutCartProductSection.productOptionsLink}}" stepKey="configureConfigurableProduct2"/>
        <waitForElement selector="{{StorefrontProductInfoMainSection.productOptionSelect($configurableProductAttribute.attribute[frontend_labels][0][label]$)}}" stepKey="waitForOption2" />
        <selectOption selector="{{StorefrontProductInfoMainSection.productOptionSelect($configurableProductAttribute.attribute[frontend_labels][0][label]$)}}" userInput="$getConfigAttributeOption.value$" stepKey="selectOption2"/>
        <fillField selector="{{StorefrontProductPageSection.qtyInput}}" userInput="{{tenPiecesAddToCart.value}}" stepKey="fillProduct2Quantity"/>
        <click selector="{{StorefrontCustomerOrderBySkuSection.updateCart}}" stepKey="clickOnAddProduct2ToCartButton"/>
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAsCustomer">
            <argument name="Customer" value="$customer$"/>
        </actionGroup>
        <!--Place order.-->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="navigateToCheckoutPage"/>
        <actionGroup ref="StorefrontCheckoutClickNextButtonActionGroup" stepKey="clickNextButton"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="clickOnPlaceOrder"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="orderNumber"/>
        <!--Verify Order.-->
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrder">
            <argument name="orderId" value="{$orderNumber}"/>
        </actionGroup>
        <waitForElementVisible selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" stepKey="waitForViewOrderedQuantity"/>
        <see selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" userInput="Ordered {{tenPiecesAddToCart.value}}" stepKey="verifyOrderedQuantityProduct"/>
        <!--Verify product1 quantity.-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProduct1Grid"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProduct1">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$configurableChildProduct1.sku$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="verifyProduct1Quantity">
            <argument name="sourceName" value="$source1.source[name]$"/>
            <argument name="sourceQty" value="{{defaultProductQty.value}}"/>
            <argument name="stockName" value="$stock.stock[name]$"/>
            <argument name="stockQty" value="{{defaultProductQtyBoughtWith10Pieces.value}}"/>
        </actionGroup>
        <!--Verify product2 quantity.-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProduct2Grid"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProduct2">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$configurableChildProduct2.sku$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="verifyProduct2Quantity">
            <argument name="sourceName" value="$source2.source[name]$"/>
            <argument name="sourceQty" value="{{defaultProductQty.value}}"/>
            <argument name="stockName" value="$stock.stock[name]$"/>
            <argument name="stockQty" value="{{defaultProductQtyBoughtWith10Pieces.value}}"/>
        </actionGroup>
    </test>
</tests>
