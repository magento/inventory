<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontReorderOfTheOrderWithConfigurableProductWithDropDownAttributeOnDefaultStockFromHomepageTest">
        <annotations>
            <stories value="Reorder of the Order"/>
            <title value="Reorder of the Order with Configurable product with drop-down attribute on Default stock from Homepage."/>
            <description value="Reorder of the Order with Configurable product with drop-down attribute on Default stock from Homepage."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735208/scenarios/2630377"/>
            <severity value="BLOCKER"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>
        <before>
            <createData entity="MsiCustomer1" stepKey="customer"/>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="ApiConfigurableProduct" stepKey="configurableProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="productAttributeWithTwoOptions" stepKey="configurableProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="configurableProductAttributeOption">
                <requiredEntity createDataKey="configurableProductAttribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="addAttributeToDefaultAttributeSet">
                <requiredEntity createDataKey="configurableProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption">
                <requiredEntity createDataKey="configurableProductAttribute"/>
            </getData>
            <createData entity="ApiSimpleOne" stepKey="product">
                <requiredEntity createDataKey="configurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
            </createData>
            <createData entity="ConfigurableProductOneOption" stepKey="configurableProductOption">
                <requiredEntity createDataKey="configurableProduct"/>
                <requiredEntity createDataKey="configurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="addOptionToConfigurableProduct">
                <requiredEntity createDataKey="configurableProduct"/>
                <requiredEntity createDataKey="product"/>
            </createData>
            <createData entity="FullSource1" stepKey="source"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <amOnPage url="{{AdminProductEditPage.url($product.id$)}}" stepKey="openProductEditPageToSetQuantity"/>
            <actionGroup ref="AdminFillSourceQtyOnProductEditPageActionGroup" stepKey="fillProductQuantity"/>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="configurableProduct" stepKey="deleteConfigurableProduct"/>
            <deleteData createDataKey="product" stepKey="deleteConfigurableProductVariation"/>
            <deleteData createDataKey="configurableProductAttribute" stepKey="deleteConfigurableProductAttribute"/>
            <actionGroup ref="DisableAllSourcesActionGroup" stepKey="disableAllSources"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdminArea"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
        </after>

        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAsCustomer">
            <argument name="Customer" value="$customer$" />
        </actionGroup>
        <actionGroup ref="StorefrontAddConfigurableProductToTheCartActionGroup" stepKey="addConfigurableProductToCart">
            <argument name="urlKey" value="$configurableProduct.custom_attributes[url_key]$" />
            <argument name="productAttribute" value="$configurableProductAttribute.default_value$"/>
            <argument name="productOption" value="$getConfigAttributeOption.value$"/>
            <argument name="qty" value="{{fivePiecesAddToCart.value}}"/>
        </actionGroup>
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="navigateToCheckoutPage"/>
        <actionGroup ref="CheckoutSelectFlatRateShippingMethodActionGroup" stepKey="selectFlatRateShipping"/>
        <actionGroup ref="StorefrontCheckoutClickNextOnShippingStepActionGroup" stepKey="goToBillingStep"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectPaymentMethod"/>
        <actionGroup ref="CheckoutPlaceOrderActionGroup" stepKey="customerPlaceOrder">
            <argument name="orderNumberMessage" value="CONST.successCheckoutOrderNumberMessage"/>
            <argument name="emailYouMessage" value="CONST.successCheckoutEmailYouMessage"/>
        </actionGroup>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="orderNumber"/>
        <actionGroup ref="StorefrontCustomerReorderActionGroup" stepKey="reorderConfigurableProduct">
            <argument name="orderNumber" value="${orderNumber}"/>
        </actionGroup>
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="navigateToCheckoutToReorder"/>
        <actionGroup ref="CheckoutSelectFlatRateShippingMethodActionGroup" stepKey="selectFlatRateShippingToReorder"/>
        <actionGroup ref="StorefrontCheckoutClickNextOnShippingStepActionGroup" stepKey="goToBillingStepToReorder"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectPaymentMethodToReorder"/>
        <actionGroup ref="CheckoutPlaceOrderActionGroup" stepKey="customerPlaceOrderReorder">
            <argument name="orderNumberMessage" value="CONST.successCheckoutOrderNumberMessage"/>
            <argument name="emailYouMessage" value="CONST.successCheckoutEmailYouMessage"/>
        </actionGroup>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="reorderNumber"/>
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrder">
            <argument name="orderId" value="{$reorderNumber}"/>
        </actionGroup>
        <waitForElementVisible selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" stepKey="waitForViewOrderedQuantity"/>
        <see selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" userInput="Ordered {{fivePiecesAddToCart.value}}" stepKey="orderedQuantity"/>
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndexPage"/>
        <actionGroup ref="FilterProductGridBySku2ActionGroup" stepKey="filterProductGridBySku">
            <argument name="sku" value="$product.sku$"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSalableProductQtyActionGroup" stepKey="verifyProductQuantity">
            <argument name="sourceName" value="{{_defaultSource.name}}"/>
            <argument name="sourceQty" value="{{defaultProductQty.value}}"/>
            <argument name="stockName" value="{{_defaultStock.name}}"/>
            <argument name="stockQty" value="{{defaultProductQtyBoughtWith10Pieces.value}}"/>
        </actionGroup>
    </test>
</tests>
